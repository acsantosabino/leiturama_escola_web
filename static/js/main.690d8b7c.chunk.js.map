{"version":3,"sources":["components/firebase/Firebase.js","components/firebase/FirebaseContext.js","components/firebase/index.js","constants/routes.js","components/Header.js","components/Escola.js","components/Turma/Turma.js","components/Professor/DaoProfessor.js","components/Turma/TurmaPersistence.js","components/Turma/Cadastro.js","components/Turma/Listagem.js","components/Turma/ListagemTurmaProfessor.js","components/Turma/index.js","components/Professor/Listagem.js","components/Professor/Cadastro.js","components/Professor/index.js","components/Login/LoginComponent.js","components/Login/EsqueciSenhaComponent.js","components/Login/index.js","components/Professor/ComponentPrimeiroAcesso.js","components/Livro/DaoLivro.js","components/Livro/ComponentListagemLivros.js","components/Registro/DaoRegistro.js","components/Registro/ComponentListagemRegistros.js","components/User/DaoUser.js","components/Turma/ListagemAlunos.js","components/FrmDownloadApk.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doSignOut","auth","signOut","doPasswordReset","email","sendPasswordResetEmail","doPasswordUpdate","password","currentUser","updatePassword","app","initializeApp","this","firestore","authUser","okCallback","errorCallback","createUserWithEmailAndPassword","then","userCredential","catch","error","callback","signInWithEmailAndPassword","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","BASE","HOME","ESCOLA","PROFESSOR","LIVROS_POR_PROFESSOR","REGISTROS","TURMA","TURMAS_DO_PROFESSOR","DOWNLOAD","AdministratorHeader","to","ROUTES","alt","src","require","height","className","href","onClick","event","ProfessorHeader","AnonimousHeader","state","usuarioLogado","profiles","administrator","professor","nomeEscola","cnpj","endereco","componentDidMount","bind","onChange","salvar","cancelar","console","log","Container","fixed","TextField","fullWidth","id","name","label","placeholder","margin","variant","value","multiline","rows","Button","color","collection","doc","get","exists","school","data","setState","initialState","target","set","Turma","adm","phone","members","DaoProfessor","getAll","lista","where","querySnapshot","forEach","prof","push","add","idUser","user","delete","empty","docs","TurmaPersistence","atualizar","turma","callbackOk","t","profId","turmaId","Cadastro","persistence","definirLista","confirmarCadastroDados","confirmarAtualizacaoDados","onAdministratorChange","required","FormControl","InputLabel","Select","labelId","listaProfessores","map","indice","MenuItem","key","cancelarCadastro","componentValue","find","element","n_borrowed","n_lent","n_read","TableOfClasses","Table","TableHead","TableRow","TableCell","align","TableBody","listaTurmas","index","onDoubleClick","LoadingClasses","TurmaListagemComponent","turmaPersistence","cadastrar","solicitarCadastro","onChangeDadosTurma","definirListaTurmas","solicitarAtualizacao","turmas","length","componentId","currentTarget","selecionarTurma","copyToClipboard","visualizarAlunos","base_link","encodeURIComponent","replace","window","location","origin","toString","getTurmasPorProfessor","e","substr","document","getElementById","select","execCommand","Listagem","dao","onRequestTeacherUpdate","cadastrarProfessor","atualizarProfessor","aria-label","i","mudarPagina","p","message","inserir","Professores","definirListaProfessores","search","LoginComponentBase","autenticar","usuario","htmlFor","OutlinedInput","type","senha","labelWidth","doSignIn","handleAuthenticationError","LoginComponent","EsqueciSenhaComponent","msg","resetar","encerrar","onSubmit","code","ComponentePrimeiroAcesso","daoProfessor","initialUser","onPasswdChange","carregarDadosProfessor","registerUser","Snackbar","anchorOrigin","vertical","horizontal","open","errorMessage","autoHideDuration","onClose","uidUser","uid","idTeacher","teacherId","autorizarUsuario","apagarTeacher","doSignUp","carregarDadosIniciaisProfessor","oldProf","DaoLivro","getLivros","getLivrosPorProfessor","book","cbOk","cbFail","cbSetTurmas","cbSetEmprestimos","membros","memberTurma","membro","emprestimos","snapshot","ActiveStatusChanger","changeStatus","inactive","daoLivro","updateBook","confirmUpdate","BarraDeNavegacao","BottomNavigation","estadoLivros","showLabels","BottomNavigationAction","icon","ComponentListagemLivros","livrosSemFiltro","livros","onChangeBookFilter","onChangeTermoPesquisado","confirmarAtualizacao","termoPesquisado","title","owner","status","livrosFiltrados","filter","livro","startsWith","allBooks","availableBooks","rentBooks","lastUpdate","Date","now","listaLivros","DaoRegistro","cbSetRegistros","registros","registro","libraryEvent","getRegistros","DaoUser","dataSnapshot","ActiveIcon","member","Acao","handleChangeStatus","daoUser","updateUser","confirm","AlunosListagemComponent","daoTurma","users","aluno","getAlunoPorTurma","findUser","ultimaAtualizacao","FrmDownloadApk","Home","App","listener","onAuthStateChanged","userData","setAuthUser","maxWidth","basename","path","exact","component","Escola","Professor","Turmas","ListagemTurmaProfessor","ComponentListagemRegistros","student","Boolean","hostname","match","ReactDOM","render","Provider","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.690d8b7c.chunk.js","sourcesContent":["import app from 'firebase/app';\nimport { auth } from \"firebase/auth\";\nimport { firestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyABV35W-LGbtEVMZNVKFtHO9fczQp_b-yY\",\n    authDomain: \"leiturama-40e49.firebaseapp.com\",\n    databaseURL: \"https://leiturama-40e49.firebaseio.com\",\n    projectId: \"leiturama-40e49\",\n    storageBucket: \"leiturama-40e49.appspot.com\",\n    messagingSenderId: \"697487135295\",\n    appId: \"1:697487135295:web:5c4d501e75585b13f35e8a\"\n};\n\nclass Firebase {\n\n    constructor() {\n        app.initializeApp(firebaseConfig);\n        this.auth = app.auth();\n        this.firestore = app.firestore();\n        this.authUser = null;\n    }\n\n    doSignUp(email, password, okCallback, errorCallback) {\n        this.auth.createUserWithEmailAndPassword(email, password)\n            .then( userCredential => okCallback(userCredential) )\n            .catch( error => errorCallback(error) );\n    }\n\n    doSignIn(email, password, callback) {\n        this.auth.signInWithEmailAndPassword(email, password).catch(callback);\n    }\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n}\n\nexport default Firebase;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import Firebase from './Firebase';\nimport FirebaseContext, {withFirebase} from './FirebaseContext';\n\nexport default Firebase;\nexport {FirebaseContext, withFirebase};","export const BASE = '/leiturama_escola_web'\nexport const HOME = '/'\nexport const ESCOLA = \"/escola\"\nexport const PROFESSOR = \"/professor\"\nexport const PROFESSOR_PRIMEIRO_ACESSO = \"/professor/primeiroacesso\"\nexport const LIVROS_POR_PROFESSOR = \"/livros/professor\"\nexport const REGISTROS = \"/registros\"\nexport const TURMA = \"/turma\"\nexport const ALUNOS_POR_TURMA = \"/turma/alunos\"\nexport const TURMAS_DO_PROFESSOR = \"/turma/professor\"\nexport const ESQUECI_SENHA = \"/esqueci_senha\"\nexport const DOWNLOAD = \"/download\"","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from './firebase';\nimport * as ROUTES from './../constants/routes';\n\nclass Header extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            usuarioLogado: null\n        }\n    }\n\n    render() {\n        if (!this.props.authUser) { \n            return <AnonimousHeader/>\n        } else if (this.props.authUser.profiles.administrator) {\n            return <AdministratorHeader firebase={this.props.firebase} />\n        } else if (this.props.authUser.profiles.professor) {\n            return <ProfessorHeader firebase={this.props.firebase} />\n        }\n    }\n}\n\nfunction AdministratorHeader(props) {\n    return (\n        <header>\n            <div>\n                <Link to={ROUTES.HOME}> <img alt=\"imagem da logo\" src={require('./../logo.png')} height=\"120px\" /> </Link>\n            </div>\n            <ul className=\"navLinks\">\n                <li><Link to={ROUTES.ESCOLA}> Escola </Link></li>\n                <li><Link to={ROUTES.PROFESSOR}> Professores </Link></li>\n                <li><Link to={ROUTES.TURMA}> Turmas </Link></li>\n            </ul>\n            <div>\n                <a href=\"#\">\n                    <div className=\"btnLogout\" onClick={event => props.firebase.doSignOut()}>Sair</div>\n                </a>\n            </div>\n        </header>\n    )\n}\n\nfunction ProfessorHeader(props) {\n    return (\n        <header>\n            <div>\n                <Link to={ROUTES.HOME}> <img alt=\"imagem da logo\" src={require('./../logo.png')} height=\"120px\" /> </Link>\n            </div>\n            <ul className=\"navLinks\">\n                <li><Link to={ROUTES.TURMAS_DO_PROFESSOR}> Turmas </Link></li>\n                <li><Link to={ROUTES.LIVROS_POR_PROFESSOR}> Livros </Link></li>\n                <li><Link to={ROUTES.REGISTROS}> Registros </Link></li>\n            </ul>\n            <div>\n                <a href=\"#\">\n                    <div className=\"btnLogout\" onClick={event => props.firebase.doSignOut()}>Sair</div>\n                </a>\n            </div>\n        </header>\n    )\n}\n\nfunction AnonimousHeader(props) {\n    return (\n        <header>\n            <Link to={ROUTES.HOME}> <img alt=\"imagem da logo\" src={require('./../logo.png')} height=\"120px\" /> </Link>\n            <ul className=\"navLinks\">\n                <li><Link to={ROUTES.DOWNLOAD}> Download APK </Link></li>\n            </ul>\n        </header>\n    )\n}\nexport default withFirebase(Header);","import React from 'react'\n\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { withFirebase } from './firebase'\nclass Escola extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nomeEscola: \"\",\n            cnpj: \"\",\n            endereco: \"\"\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.salvar = this.salvar.bind(this);\n        this.cancelar = this.cancelar.bind(this);\n    }\n\n    render() {\n        console.log(\"Escola - rendered\")\n        return (\n            <Container fixed>\n                <h1>Escola</h1>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"iptNomeEscola\"\n                        name=\"nomeEscola\"\n                        label=\"Escola\"\n                        placeholder=\"Nome da escola\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.nomeEscola}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"iptCnpjEscola\"\n                        name=\"cnpj\"\n                        label=\"CNPJ\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.cnpj}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"iptEndereco\"\n                        name=\"endereco\"\n                        label=\"Endereço\"\n                        multiline\n                        rows=\"6\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.endereco}\n                    />\n                </div>\n                <div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.salvar} >Salvar</Button>\n                    &nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.cancelar}>Cancelar</Button>\n                </div>\n            </Container>\n\n        )\n    }\n\n    componentDidMount() {\n        console.log(\"Escola - componentDidMount\");\n        let schoolReference = this.props.firebase.firestore.collection(\"school\").doc(\"ftHhzHgJB1XTR9dDgbE8\");\n        schoolReference.get().then(doc => {\n            if (doc.exists) {\n                let school = doc.data();\n                this.setState({ ...school });\n                this.initialState = {...school};\n            }\n        }).catch(function (error) {\n            console.log(\"Escola - Erro na busca dos dados da escola\", error);\n        });\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    salvar(event) {\n        this.props.firebase.firestore.collection(\"school\").doc(\"ftHhzHgJB1XTR9dDgbE8\").\n            set({ ...this.state }).\n            then(function () {\n                console.log(\"Dados da escola salvos com sucesso\");\n            })\n    }\n\n    cancelar(event){\n        this.setState({...this.initialState});\n    }\n}\n\nexport default withFirebase(Escola);\n","class Turma {\n\n    constructor() {\n        this.adm = {\n            email: \"\",\n            id: \"\",\n            name: \"\", \n            phone: \"\"\n        }\n        this.name = \"\"\n        this.members = []\n    }\n}\n\nexport default Turma;","import Firebase from \"./../firebase/Firebase\"\n\nclass DaoProfessor {\n\n    constructor(firebase) {\n        this.firebase = firebase;\n        this.getAll = this.getAll.bind(this);\n    }\n\n    getAll(callback) {\n        let lista = [];\n        this.firebase.firestore.collection(\"user\").where(\"profiles.professor\", \"==\", true).get().then(\n\n            querySnapshot => {\n                querySnapshot.forEach(\n                    doc => {\n                        let prof = doc.data();\n                        prof.id = doc.id;\n                        lista.push(prof);\n                    }\n                );\n                callback(lista);\n            }\n        )\n    }\n\n    atualizar(id, professor, callback, error) {\n        this.firebase.firestore.collection(\"user\").doc(id)\n            .set(professor)\n            .then(callback())\n            .catch(error(error))\n    }\n\n    inserir(professor, callback, error) {\n        this.firebase.firestore.collection(\"teachers\").add(professor)\n            .then(callback())\n            .catch(error(error))\n    }\n\n    autorizarUsuario(idUser, user) {\n        this.firebase.firestore.collection(\"user\").doc(idUser).set(user)\n            .then(console.log(\"user adicionado com sucesso\"))\n            .catch( error => console.log(error) )\n    }\n\n    apagarTeacher(id) {\n        this.firebase.firestore.collection(\"teachers\").doc(id).delete().then(\n            ()=>{console.log(\"teacher deletado com sucesso\")}\n        )\n        .catch(\n            error=>{console.log(error)}\n        )\n    }\n\n    carregarDadosIniciaisProfessor(email, callback) {\n        this.firebase.firestore.collection(\"teachers\").where(\"email\", \"==\", email).get().then(\n            querySnapshot => {\n                if (querySnapshot.empty) {\n                    callback(null)\n                } else {\n                    let prof = querySnapshot.docs[0].data()\n                    prof.id = querySnapshot.docs[0].id\n                    callback(prof)\n                }\n            }\n        )\n    }\n}\n\nexport default DaoProfessor;","class TurmaPersistence {\n\n    constructor(firebase) {\n        this.firebase = firebase;\n        this.salvar = this.salvar.bind(this);\n        this.atualizar = this.atualizar.bind(this);\n    }\n\n    salvar(turma, callbackOk) {\n        let t = {}\n        t.name = turma.name\n        t.members = []\n        t.adm = turma.adm\n        this.firebase.firestore.collection(\"library\").add(t)\n            .then(callbackOk)\n            .catch(\n                function (error) {\n                    console.log(\"Error saving document:\", error);\n                }\n            );\n    }\n\n    atualizar(turma, callbackOk) {\n        this.firebase.firestore\n            .collection(\"library\")\n            .doc(turma.id)\n            .set(turma)\n            .then(() => {\n                callbackOk();\n            })\n            .catch(function (error) {\n                console.log(\"Error updating document:\", error);\n            });\n    }\n\n    getAll(callbackOk) {\n        let lista = [];\n        this.firebase.firestore.collection(\"library\").get().then(\n            querySnapshot => {\n                querySnapshot.forEach(\n                    doc => {\n                        let turma = doc.data();\n                        lista.push(turma);\n                    }\n                );\n                callbackOk(lista);\n            }\n        );\n    }\n\n    getTurmasPorProfessor(profId, callbackOk) {\n        let lista = [];\n        this.firebase.firestore.collection(\"library\").where(\"adm.id\", \"==\", profId).get().then(\n            querySnapshot => {\n                querySnapshot.forEach(\n                    doc => {\n                        let turma = doc.data();\n                        turma.id = doc.id;\n                        lista.push(turma);\n                    }\n                );\n                callbackOk(lista);\n            }\n        );\n    }\n\n    getAlunoPorTurma(turmaId, callbackOk) {\n        \n        this.firebase.firestore.collection(\"library\").doc(turmaId).get().then(\n            turma => {\n                callbackOk(turma.data())\n            }\n        )\n    }\n}\n\nexport default TurmaPersistence;","import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport DaoProfessor from '../Professor/DaoProfessor'\nimport { withFirebase } from '../firebase'\nimport TurmaPersistence from './TurmaPersistence'\n\nclass CadastroBase extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.persistence = new TurmaPersistence(this.props.firebase)\n\n        this.state = { turma: props.turma }\n        this.definirLista = this.definirLista.bind(this)\n        this.confirmarCadastroDados = this.confirmarCadastroDados.bind(this)\n        this.confirmarAtualizacaoDados = this.confirmarAtualizacaoDados.bind(this)\n        this.salvar = this.salvar.bind(this)\n        this.onAdministratorChange = this.onAdministratorChange.bind(this)\n    }\n\n    render() {\n        console.log(this.props.turma)\n        return <Container fixed>\n            <div>\n                <TextField fullWidth required id=\"name\" label=\"Nome\" margin=\"normal\"\n                    variant=\"outlined\" onChange={this.props.onChange} value={this.props.turma.name} />\n            </div>\n\n            <div>\n                <FormControl fullWidth>\n                    <InputLabel id=\"lblAdministrator\">  Administrador *</InputLabel>\n                    <Select fullWidth id=\"administrator\" label=\"Administrador\" variant=\"outlined\"\n                        labelId=\"lblAdministrator\" value={this.props.turma.adm.id} onChange={this.onAdministratorChange}>\n                        {\n                            this.state.listaProfessores ?\n                                this.state.listaProfessores.map(\n                                    (prof, indice) => {\n                                        return <MenuItem value={prof.id} key={prof.id}>\n                                            {prof.name}\n                                        </MenuItem>\n                                    }\n                                ) : null\n                        }\n                    </Select>\n                </FormControl>\n            </div>\n\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.salvar} >Salvar</Button> &nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.props.cancelarCadastro}>Cancelar</Button>\n            </div>\n        </Container>\n    }\n\n    componentDidMount() {\n        let daoProf = new DaoProfessor(this.props.firebase)\n        daoProf.getAll(this.definirLista)\n    }\n\n    definirLista(lista) {\n        this.setState({ listaProfessores: lista })\n    }\n\n    confirmarCadastroDados() {\n        console.log(\"Turma salva com sucesso\")\n        this.props.cancelarCadastro()\n    }\n\n    confirmarAtualizacaoDados() {\n        console.log(\"Turma atualizada com sucesso\")\n        this.props.cancelarCadastro()\n    }\n\n    onAdministratorChange(event) {\n        let componentValue = event.target.value;\n        let adm = this.state.listaProfessores.find(\n            element => element.id === componentValue\n        )\n        delete(adm.n_borrowed)\n        delete(adm.n_lent)\n        delete(adm.n_read)\n        delete(adm.profiles)\n        let turma = this.state.turma\n        turma.adm = adm\n        this.setState({turma: turma})\n    }\n\n    salvar(event) {\n        if (this.state.turma.id) {\n            this.persistence.atualizar(this.state.turma, this.confirmarCadastroDados)\n        } else {\n            this.persistence.salvar(this.state.turma, this.confirmarCadastroDados)\n        }\n        this.props.cancelarCadastro()\n    }\n}\n\nconst Cadastro = withFirebase(CadastroBase)\n\nexport default Cadastro","import React from 'react';\nimport Turma from './Turma';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Cadastro from './Cadastro';\nimport { withFirebase } from '../firebase';\nimport TurmaPersistence from './TurmaPersistence';\n\nclass TurmaListagemComponentBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.turmaPersistence = new TurmaPersistence(props.firebase);\n        this.state = { cadastrar: false };\n        this.solicitarCadastro = this.solicitarCadastro.bind(this);\n        this.cancelarCadastro = this.cancelarCadastro.bind(this);\n        this.onChangeDadosTurma = this.onChangeDadosTurma.bind(this);\n        this.definirListaTurmas = this.definirListaTurmas.bind(this);\n        this.solicitarAtualizacao = this.solicitarAtualizacao.bind(this);\n    }\n\n    render() {\n        if (this.state.cadastrar) {\n            return <Cadastro turma={this.state.turma}\n                firebase={this.props.firebase}\n                cancelarCadastro={this.cancelarCadastro}\n                salvar={this.salvar}\n                onChange={this.onChangeDadosTurma} />\n        }\n        \n        if (this.state.turmas) {\n            return <div>\n                <AddCircleIcon onClick={this.solicitarCadastro} />\n                {this.state.turmas.length > 0 ?\n                    <TableOfClasses listaTurmas={this.state.turmas}\n                        onDoubleClick={this.solicitarAtualizacao}/>:\n                    <h2>Não há turmas cadastradas</h2>}\n            </div>\n        } else {\n            return <div>\n                <AddCircleIcon onClick={this.solicitarCadastro}/>\n                <LoadingClasses />\n            </div>\n        }\n    }\n\n    onChangeDadosTurma(event) {\n        let componentId = event.target.id;\n        let componentValue = event.target.value;\n\n        let turma = this.state.turma;\n        turma[componentId] = componentValue;\n        this.setState({ turma: (turma) });\n    }\n\n    solicitarCadastro() {\n        let turma = new Turma();\n        this.setState({ cadastrar: true, turma: (turma) });\n    }\n\n    solicitarAtualizacao(event) {\n        let index = event.currentTarget.id;\n        let turma = this.state.turmas[index];\n        console.log(turma);\n        this.setState({ cadastrar: true, turma: (turma) });\n    }\n\n    cancelarCadastro() {\n        this.setState({ cadastrar: false });\n    }\n\n    definirListaTurmas(listaTurmas) {\n        this.setState({ turmas: listaTurmas });\n    }\n\n    componentDidMount() {\n        this.turmaPersistence.getAll(this.definirListaTurmas);\n    }\n}\n\nfunction TableOfClasses(props) {\n    return <div>\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell align=\"center\">Nome</TableCell>\n                    <TableCell align=\"center\">Administrador</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    props.listaTurmas.map((turma, index) => {\n                        return <TableRow key={index} \n                        id={index}\n                        name={index} \n                        onDoubleClick={props.onDoubleClick}>\n                            <TableCell align=\"center\">{turma.name}</TableCell>\n                            <TableCell align=\"center\">{turma.adm.name}</TableCell>\n\n                        </TableRow>\n                    })\n                }\n            </TableBody>\n        </Table>\n    </div>\n}\n\nfunction LoadingClasses(props) {\n    return <h2>\n        Carregando turmas\n    </h2>\n}\n\nconst TurmaListagemComponent = withFirebase(TurmaListagemComponentBase);\nexport default TurmaListagemComponent;","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport { withFirebase } from '../firebase'\nimport TurmaPersistence from './TurmaPersistence'\nimport PeopleIcon from '@material-ui/icons/People'\nimport * as ROUTES from './../../constants/routes'\nimport { Redirect } from 'react-router-dom'\n\nconst base_link = \"https://leiturama.page.link/?\";\nconst link = \"https://leituramaescola.com/\";\nconst apn = \"com.arthur.leituramaescola\";\nconst afl = \"/download\";\n\nclass TurmaListagemComponentBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.turmaPersistence = new TurmaPersistence(props.firebase)\n        this.definirListaTurmas = this.definirListaTurmas.bind(this)\n        this.selecionarTurma = this.selecionarTurma.bind(this)\n        this.copyToClipboard = this.copyToClipboard.bind(this)\n    }\n\n    render() {\n        if (this.state.visualizarAlunos && this.state.turma) {\n            return <Redirect to={ROUTES.ALUNOS_POR_TURMA + \"?turma=\" + this.state.turma.id} />\n        } else if (!this.state.turmas) {\n            return <div> <LoadingClasses /> </div>\n        } else if (!this.state.turmas.length) {\n            return <div> <h2>Não há turmas cadastradas</h2> </div>\n        } else {\n            return <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Administrador</TableCell>\n                        <TableCell align=\"center\">Nome</TableCell>\n                        <TableCell align=\"center\">Convite</TableCell>\n                        <TableCell align=\"center\">Alunos</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        this.state.turmas.map(\n                            (turma, index) => {\n                                return (\n                                    <TableRow key={index} id={index} name={index}>\n                                        <TableCell align=\"center\"> {turma.name} </TableCell>\n                                        <TableCell align=\"center\"> {turma.adm.name} </TableCell>\n                                        <TableCell align=\"center\">\n                                            <input id={\"link\" + turma.id}\n                                                value={base_link + \"link=\" + encodeURIComponent(link + turma.id).replace('%20', '+')\n                                                    + \"&apn=\" + encodeURIComponent(apn).replace('%20', '+')\n                                                    + \"&afl=\" + encodeURIComponent(window.location.origin.toString() + ROUTES.BASE + ROUTES.DOWNLOAD).replace('%20', '+')} />\n                                            <button id={\"btn\" + turma.id} onClick={this.copyToClipboard}> Convidar </button>\n\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <PeopleIcon id={index} onClick={this.selecionarTurma}/>\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            }\n                        )\n                    }\n                </TableBody>\n            </Table>\n        }\n    }\n\n    selecionarTurma(event) {\n        let index = event.target.id\n        let turma = this.state.turmas[index]\n        let members = turma?turma.members:[]\n        console.log(members)\n        this.setState({ visualizarAlunos: true, turma: (turma) })\n    }\n\n    definirListaTurmas(listaTurmas) {\n        this.setState({ turmas: listaTurmas })\n    }\n\n    componentDidMount() {\n        let id = this.props.authUser.id\n        this.turmaPersistence.getTurmasPorProfessor(id, this.definirListaTurmas)\n    }\n\n    copyToClipboard(e) {\n        let id = e.target.id.substr(3)\n        let edtLink = document.getElementById(\"link\" + id)\n        edtLink.select()\n        document.execCommand(\"copy\")\n        console.log(\"somente um teste\")\n    }\n}\n\nfunction LoadingClasses(props) {\n    return <h2>\n        Carregando turmas\n    </h2>\n}\n\nconst TurmaListagemComponent = withFirebase(TurmaListagemComponentBase)\n\nexport default TurmaListagemComponent","\nimport TurmaListagemComponent from './Listagem'\nimport ListagemTurmaProfessor from './ListagemTurmaProfessor'\n\nexport default TurmaListagemComponent\n\nexport {ListagemTurmaProfessor}","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport * as ROUTES from './../../constants/routes';\nimport { withFirebase } from './../firebase';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DaoProfessor from './DaoProfessor';\n\nclass ListagemBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.dao = new DaoProfessor(props.firebase);\n        this.onClick = this.onClick.bind(this);\n        this.onDoubleClick = this.onDoubleClick.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.onRequestTeacherUpdate = this.onRequestTeacherUpdate.bind(this);\n        this.state = {\n            cadastrarProfessor: false,\n            atualizarProfessor: false\n        };\n    }\n\n    render() {\n        if (this.state.cadastrar) {\n            return <Redirect to={ROUTES.PROFESSOR + \"?cadastrar=true\"} />\n        } else if (this.state.atualizar) {\n            return <Redirect to={ROUTES.PROFESSOR + \"?indice=\" + this.state.indice} />\n        }\n        return (\n            <div>\n                <div onClick={this.onClick}>\n                    <AddCircleIcon />\n                </div>\n\n                <Table aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Nome</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Telefone</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n\n                        {\n                            this.state.lista ?\n                                this.state.lista.map(\n                                    ((prof, i) => {\n                                        return (\n                                            <TableRow id={i} onDoubleClick={this.onDoubleClick}\n                                                key={i}>\n                                                <TableCell align=\"center\"> {prof.name} </TableCell>\n                                                <TableCell align=\"center\"> {prof.email} </TableCell>\n                                                <TableCell align=\"center\"> {prof.phone} </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                ) : null\n                        }\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n\n    onClick(event) {\n        this.setState({ cadastrar: true, atualizar: false })\n    }\n\n    onDoubleClick(event) {\n        let id = event.currentTarget.id;\n        this.setState({ cadastrar: false, atualizar: true, indice: id });\n    }\n\n    componentDidMount() {\n        this.dao.getAll(\n            lista => {\n                this.props.definirLista(lista);\n                this.setState({ 'lista': lista });\n            }\n        )\n    }\n\n    onRequestTeacherUpdate(event) {\n        this.setState(\n            {\n                indice: event.target.id,\n                cadastrar: false,\n                atualizar: true\n            }\n        );\n    }\n}\n\nconst Listagem = withFirebase(ListagemBase);\n\nexport default Listagem;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as ROUTES from \"./../../constants/routes\";\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { withFirebase } from \"./../firebase\";\nimport DaoProfessor from \"./DaoProfessor\";\n\nclass CadastroBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            mudarPagina: false,\n            professor: {\n                name: \"\",\n                email: \"\",\n                phone: \"\"\n            }\n        };\n        this.state = { ...this.initialState };\n        this.onChange = this.onChange.bind(this);\n        this.salvar = this.salvar.bind(this);\n        this.cancelar = this.cancelar.bind(this);\n        this.dao = new DaoProfessor(this.props.firebase);\n    }\n\n    render() {\n        console.log(\"Professor - Cadastro - rendered\");\n        console.log(this.state);\n        if (this.state.mudarPagina) {\n            return <Redirect to={ROUTES.PROFESSOR} />\n        }\n        return (\n            <Container fixed>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"name\"\n                        name=\"name\"\n                        label=\"Nome\"\n                        placeholder=\"Nome do professor\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.professor.name}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"E-mail\"\n                        placeholder=\"E-mail do professor\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.professor.email}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"phone\"\n                        name=\"phone\"\n                        label=\"Telefone\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.professor.phone}\n                    />\n                </div>\n                <div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.salvar} >Salvar</Button>&nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.cancelar}>Cancelar</Button>\n                </div>\n            </Container>\n        )\n    }\n\n    componentDidMount() {\n        if (this.props.lista) {\n            const prof = this.props.lista[this.props.indice];\n            console.log(\"didMount Cadastro\");\n            console.log(prof);\n            console.log(\"didMount Cadastro\");\n            this.setState({ professor: prof });\n        }\n    }\n\n    onChange(event) {\n        let p = this.state.professor;\n        p[event.target.name] = event.target.value;\n        this.setState({ professor: p });\n    }\n\n    cancelar(event) {\n        this.setState({ mudarPagina: true });\n    }\n\n    salvar(event) {\n        let prof = { ...this.state.professor };\n        let id = prof.id;\n        delete prof.id;\n        delete prof.mudarPagina;\n        if (id) {\n            this.dao.atualizar(id, prof,\n                () => {\n                    console.log(\"Dados do professor atualizados com sucesso\");\n                    this.setState({ mudarPagina: true });\n                },\n                error => console.log(error.message)\n            )\n        } else {\n            this.dao.inserir(prof,\n                () => {\n                    console.log(\"Dados do professor atualizados com sucesso\");\n                    this.setState({ mudarPagina: true });\n                },\n                error => console.log(error.message)\n            )\n        }\n\n        this.props.firebase.firestore.collection(\"teachers\").\n            add(prof).\n            then(\n                () => {\n                    console.log(\"Dados do professor salvos com sucesso\");\n                    this.setState({ mudarPagina: true });\n                }\n            )\n    }\n}\nconst Cadastro = withFirebase(CadastroBase);\n\nexport default Cadastro;","import React from 'react';\nimport Listagem from './Listagem';\nimport Cadastro from './Cadastro';\nimport {withFirebase} from './../firebase';\n \nclass ProfessoresBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.definirListaProfessores = this.definirListaProfessores.bind(this);\n    }\n    \n    render() {\n        console.log(\"Professores - render\");\n        if (this.props.location.search) {\n            if (this.props.location.search.substr(0,8) === \"?indice=\") {\n                const indice = this.props.location.search.substr(8)\n                return <Cadastro lista={this.state.lista} indice={indice}/>\n            }\n            return <Cadastro/>\n        } else {\n            return <Listagem definirLista={this.definirListaProfessores} />\n        }\n    }\n\n    definirListaProfessores(listaProfessores) {\n        this.setState( {lista: listaProfessores} );\n    }\n}\n\nconst Professores = withFirebase(ProfessoresBase);\n\nexport default Professores;","import React from 'react';\nimport './LoginComponent.css';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { withFirebase } from './../firebase';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport * as ROUTES from \"./../../constants/routes\";\nimport { Link } from 'react-router-dom';\n\nclass LoginComponentBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n        this.onChange = this.onChange.bind(this);\n        this.cancelar = this.cancelar.bind(this);\n        this.autenticar = this.autenticar.bind(this);\n    }\n\n    render() {\n        return <Container fixed>\n            <div>\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"E-mail\"\n                    placeholder=\"email\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.usuario}\n                    onChange={this.onChange}\n                />\n            </div>\n            <div>\n                <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                    <OutlinedInput\n                        id=\"senha\"\n                        type='password'\n                        value={this.state.senha}\n                        onChange={this.onChange}\n                        labelWidth={70}\n                    />\n                </FormControl>\n                <Link to={ROUTES.ESQUECI_SENHA}>Esqueci a senha</Link> <br/>\n                <Link to={ROUTES.PROFESSOR_PRIMEIRO_ACESSO}>É seu primeiro acesso professor?</Link>\n            </div>\n            <div className=\"confirmationControl\">\n                <Button variant=\"contained\" color=\"primary\" onClick={this.autenticar}>Autenticar</Button>\n                &nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.cancelar}>Limpar</Button>\n            </div>\n        </Container>\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    cancelar() {\n        this.setState({ ...initialState });\n    }\n\n    autenticar() {\n        this.props.firebase.doSignIn(this.state.email, this.state.senha, this.handleAuthenticationError);\n    }\n\n    handleAuthenticationError(error){\n        console.log(\"===================================\");\n        console.log(error);\n        console.log(error.message);\n        console.log(\"===================================\");\n    }\n}\n\nconst initialState = { email: \"\", senha: \"\" };\n\nconst LoginComponent = withFirebase(LoginComponentBase);\n\nexport default LoginComponent;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { withFirebase } from './../firebase';\nimport { Redirect } from 'react-router-dom';\nimport * as ROUTES from \"./../../constants/routes\";\n\nclass EsqueciSenhaComponentBase extends React.Component {\n\n    constructor(props) {\n        console.log(\"FrmEsqueciSenha - constructor\");\n        super(props);\n        this.state = { email: \"\", msg: \"\" };\n        this.onChange = this.onChange.bind(this);\n        this.resetar = this.resetar.bind(this);\n        this.cancelar = this.cancelar.bind(this);\n    }\n\n    render() {\n        if (this.state.encerrar) {\n            return <Redirect to={ROUTES.HOME} />\n        }\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <TextField\n                        fullWidth\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"E-mail\"\n                        placeholder=\"E-mail\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.email}\n                        onChange={this.onChange} />\n\n                    <div className=\"confirmationControl\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetar}>Resetar</Button>\n                        &nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.cancelar}>Cancelar</Button>\n                    </div>\n                </form>\n                {this.state.msg ? this.state.msg : \"\"}\n            </div>\n        )\n    }\n\n    onChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    resetar(event) {\n        this.props.firebase.doPasswordReset(this.state.email).\n            then(\n                () => {\n                    this.setState({ email: \"\", msg: \"Um email foi enviado para \" + this.state.email + \" com instruções para recuperar sua senha\" });\n                    this.setState({ encerrar: true });\n                }\n            ).catch(\n                error => {\n                    console.log(\"falha\");\n                    if (error.code === \"auth/user-not-found\") {\n                        this.setState({ msg: \"Email não encontrado\" })\n                    } else if (error.code === \"auth/invalid-email\") {\n                        this.setState({ msg: \"Email inválido\" })\n                    } else {\n                        this.setState({ msg: \"Falha na operação\" })\n                    }\n                }\n            );\n    }\n\n    cancelar() {\n        this.setState({ encerrar: true });\n    }\n\n    componentDidMount() {\n\n    }\n}\n\nconst EsqueciSenhaComponent = withFirebase(EsqueciSenhaComponentBase);\n\nexport default EsqueciSenhaComponent;","import LoginComponent from './LoginComponent';\nimport EsqueciSenhaComponent from './EsqueciSenhaComponent';\n\nexport default LoginComponent;\n\nexport {EsqueciSenhaComponent};","import React from 'react';\nimport { withFirebase } from '../firebase';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport DaoProfessor from './DaoProfessor';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nclass ComponentePrimeiroAcessoBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.daoProfessor = new DaoProfessor(this.props.firebase);\n        this.state = {\n            user: { ...initialUser }\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onPasswdChange = this.onPasswdChange.bind(this)\n        this.carregarDadosProfessor = this.carregarDadosProfessor.bind(this)\n        this.onClick = this.onClick.bind(this)\n        this.registerUser = this.registerUser.bind(this)\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <Container fixed>\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"E-mail\"\n                    placeholder=\"email\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.user.email}\n                    onChange={this.onChange}\n                />\n                <br />\n\n                {\n                    !this.state.user.name ? null : <div>\n                        <TextField\n                            fullWidth\n                            id=\"name\"\n                            name=\"name\"\n                            label=\"Nome\"\n                            placeholder=\"Nome\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            value={this.state.user.name}\n                            onChange={this.onChange}\n                        />\n                        <br />\n                        <TextField\n                            fullWidth\n                            id=\"phone\"\n                            name=\"phone\"\n                            label=\"Telefone\"\n                            placeholder=\"Telefone\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            value={this.state.user.phone}\n                            onChange={this.onChange}\n                        />\n                        <br />\n                        <FormControl variant=\"outlined\" fullWidth>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"senha\"\n                                type='password'\n                                value={this.state.password}\n                                onChange={this.onPasswdChange}\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                }\n                <div className=\"confirmationControl\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.onClick}> Iniciar </Button>\n                    &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={event => this.setState({ user: { ...initialUser } })}>Limpar</Button>\n                </div>\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'left', }}\n                    open={this.state.errorMessage}\n                    autoHideDuration={1000}\n                    onClose={ () => this.setState({errorMessage: null}) }\n                    message={this.state.errorMessage}\n                />\n            </Container>\n        )\n    }\n\n    showMessage(value) {\n\n    }\n\n    onPasswdChange(event) {\n        let value = event.target.value\n        this.setState({ senha: value })\n    }\n\n    onChange(event) {\n        let value = event.target.value\n        let id = event.target.id\n        let user = this.state.user\n        user[id] = value;\n        this.setState({ user: user });\n    }\n\n    registerUser(userCredential) {\n        let uidUser = userCredential.user.uid\n        let idTeacher = this.state.teacherId\n        let user = this.state.user\n        user.id = uidUser\n\n        this.daoProfessor.autorizarUsuario(uidUser, user)\n\n        this.daoProfessor.apagarTeacher(idTeacher)\n    }\n\n    onClick(event) {\n        if (this.state.user.name) {\n            // Registra usuário no Firebase Authentication\n            let email = this.state.user.email\n            let senha = this.state.senha\n            this.props.firebase.doSignUp(email, senha, this.registerUser, error => console.log(error))\n        } else {\n            // Usuário digitou email e carrega os dados do pre cadastro que já foi realizado\n            this.daoProfessor.carregarDadosIniciaisProfessor(this.state.user.email,\n                prof => {\n                    if (prof) {\n                        let id = prof.id;\n                        delete (prof.id)\n                        let oldProf = this.state.user\n                        this.setState({ teacherId: id, user: { ...oldProf, ...prof } })\n                    } else {\n                        this.setState( {errorMessage: \"Usuário inexistente\"} )\n                    }\n                }\n            )\n        }\n    }\n\n    carregarDadosProfessor(email) {\n\n    }\n}\n\nconst ComponentePrimeiroAcesso = withFirebase(ComponentePrimeiroAcessoBase);\n\nconst initialUser = {\n    name: \"\",\n    n_borrowed: 0,\n    n_lent: 0,\n    n_read: 0,\n    email: \"\",\n    phone: \"\",\n    profiles: {\n        professor: true\n    }\n}\n\nexport default ComponentePrimeiroAcesso;","import TurmaPersistence from \"../Turma/TurmaPersistence\";\n\nclass DaoLivro {\n\n    constructor(firebase) {\n        this.firebase = firebase\n        this.getLivros = this.getLivros.bind(this)\n        this.getLivrosPorProfessor = this.getLivrosPorProfessor.bind(this)\n    }\n\n    updateBook(book, cbOk, cbFail) {\n        this.firebase.firestore.collection(\"books\").doc(book.id).set(book).then(\n            cbOk,\n            error => cbFail(error)\n        )\n    }\n\n    getLivrosPorProfessor(profId, cbSetTurmas) {\n        let turmaPersistence = new TurmaPersistence(this.firebase)\n        turmaPersistence.getTurmasPorProfessor(profId, cbSetTurmas)\n    }\n\n    getLivros(listaTurmas, cbSetEmprestimos) {\n        let membros = []\n        listaTurmas.forEach(\n            turma => {\n                if (turma.members) {\n                    turma.members.forEach(\n                        memberTurma => {\n                            let jaAdicionado = membros.find(\n                                membro => membro.id === memberTurma.id\n                            )\n                            if (!jaAdicionado) {\n                                membros.push(memberTurma)\n                            }\n                        }\n                    )\n                }\n            }\n        )\n\n        let emprestimos = []\n        membros.forEach(\n            membro => {\n                this.firebase.firestore.collection(\"books\").where(\"owner.id\", \"==\", membro.id).get().then(\n                    querySnapshot => {\n                        if (!querySnapshot.empty) {\n                            querySnapshot.docs.forEach(\n                                snapshot => {\n                                    let book = snapshot.data()\n                                    book.id = snapshot.id\n                                    emprestimos.push(book)\n                                }\n                            )\n                            cbSetEmprestimos(emprestimos)\n                        }\n                    }\n                )\n            }\n        )\n    }\n}\n\nexport default DaoLivro","import React from 'react'\nimport { withFirebase } from './../firebase'\nimport DaoLivro from './DaoLivro'\nimport { Container, Table, TableRow, TableCell, TableHead, TableBody, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AvailableIcon from '@material-ui/icons/Check'\nimport TextField from '@material-ui/core/TextField'\nimport {Button} from '@material-ui/core'\n\nclass ComponentListagemLivrosBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { estadoLivros: \"ALL\", livrosSemFiltro: [], livros: []}\n        this.dao = new DaoLivro(this.props.firebase)\n        this.onChangeBookFilter = this.onChangeBookFilter.bind(this)\n        this.onChangeTermoPesquisado = this.onChangeTermoPesquisado.bind(this)\n        this.confirmarAtualizacao = this.confirmarAtualizacao.bind(this)\n    }\n\n    render() {\n        if (!this.state.livrosSemFiltro) {\n            return <h1>Carregando livros</h1>\n        } else {\n            return <Container fixed>\n                <BarraDeNavegacao estadoLivros={this.state.estadoLivros} onChange={this.onChangeBookFilter} />\n                <TextField fullWidth id=\"edtTitle\" label=\"Pesquisar\" placeholder=\"Digite o título desejado\"\n                        margin=\"normal\" variant=\"outlined\" onChange={this.onChangeTermoPesquisado} value={this.state.termoPesquisado} />\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Mudar status</TableCell>\n                            <TableCell align=\"center\">Título</TableCell>\n                            <TableCell align=\"center\">Proprietário</TableCell>\n                            <TableCell align=\"center\">Status</TableCell>\n                            { this.state.estadoLivros===\"RENT\"?<TableCell align=\"center\">Devolver</TableCell>:null }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.livros.map(\n                                (book, index) => {\n                                    return <TableRow key={index} id={index} name={index} >\n                                        <TableCell align=\"center\"> <ActiveStatusChanger book={book} daoLivro={this.dao} confirmUpdate={this.confirmarAtualizacao}/> </TableCell>\n                                        <TableCell align=\"center\"> {book.title} </TableCell>\n                                        <TableCell align=\"center\"> {book.owner.name}</TableCell>\n                                        <TableCell align=\"center\"> {book.status}</TableCell>\n                                        { this.state.estadoLivros===\"RENT\"?<TableCell align=\"center\"><Button variant=\"outlined\" color=\"secondary\">Devolver</Button></TableCell>:null }\n                                    </TableRow>\n                                }\n                            )\n                        }\n                    </TableBody>\n                </Table>\n            </Container>\n        }\n    }\n    onChangeTermoPesquisado(event) {\n        let termoPesquisado = event.target.value\n        \n        if (termoPesquisado.length < 3) {\n            let livrosSemFiltro = this.state.livrosSemFiltro\n            this.setState({livros: livrosSemFiltro})\n        } else {\n            let livrosSemFiltro = this.state.livrosSemFiltro\n            let livrosFiltrados = livrosSemFiltro.filter(\n                livro => livro.title.startsWith(termoPesquisado)\n            )\n            this.setState({livros: livrosFiltrados})\n        }\n    }\n\n    onChangeBookFilter(event, value) {\n        if (value === \"ALL\") {\n            this.setState({ estadoLivros: value, livros: this.state.allBooks, livrosSemFiltro: this.state.allBooks})\n        } else if (value === \"AVAILABLE\") {\n            this.setState({ estadoLivros: value, livros: this.state.availableBooks, livrosSemFiltro: this.state.availableBooks })\n        } else {\n            this.setState({ estadoLivros: value, livros: this.state.rentBooks, livrosSemFiltro: this.state.rentBooks })\n        }\n    }\n\n    confirmarAtualizacao() {\n        this.setState({lastUpdate: Date.now()})\n    }\n\n    componentDidMount() {\n        this.dao.getLivrosPorProfessor(this.props.authUser.id,\n            (\n                listaTurmas => {\n                    this.dao.getLivros(listaTurmas,\n                        listaLivros => {\n                            let allBooks = listaLivros\n                            let availableBooks = []\n                            let rentBooks = []\n                            let livros = allBooks\n                            listaLivros.forEach(\n                                livro => {\n                                    if (livro.status === 'AVAILABLE') {\n                                        availableBooks.push(livro)\n                                    } else {\n                                        rentBooks.push(livro)\n                                    }\n                                }\n                            )\n                            this.setState(\n                                {\n                                    allBooks: allBooks,\n                                    availableBooks: availableBooks,\n                                    rentBooks: rentBooks,\n                                    livros: livros,\n                                    livrosSemFiltro: livros\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n        )\n    }\n}\n\nfunction ActiveStatusChanger(props) {\n\n    function changeStatus() {\n        book.inactive = !book.inactive\n        daoLivro.updateBook(book, props.confirmUpdate)\n    }\n\n    let book = props.book\n    let daoLivro = props.daoLivro\n\n    if (book.inactive) {\n        return <Button variant=\"contained\" color=\"primary\" onClick={changeStatus}>Ativar</Button>\n    }\n    return <Button variant=\"contained\" color=\"secondary\" onClick={changeStatus}>Desativar</Button>\n}\n\nfunction BarraDeNavegacao(props) {\n    return (\n        <BottomNavigation value={props.estadoLivros} showLabels onChange={props.onChange} >\n            <BottomNavigationAction value=\"ALL\" label=\"Todos\" icon={<LibraryBooksIcon />} />\n            <BottomNavigationAction value=\"AVAILABLE\" label=\"Disponíveis\" icon={<AvailableIcon />} />\n            <BottomNavigationAction value=\"RENT\" label=\"Emprestados\" icon={<CloseIcon />} />\n        </BottomNavigation>\n    )\n}\n\nlet ComponentListagemLivros = withFirebase(ComponentListagemLivrosBase)\n\nexport default ComponentListagemLivros","class DaoRegistro {\n\n    constructor(firebase) {\n        this.firebase = firebase\n    }\n\n    getRegistros(livros, cbSetRegistros) {\n        let registros = []\n        livros.forEach(\n            livro => {\n                this.firebase.firestore.collection(\"registers\").where(\"book.id\", \"==\", livro.id).get().then(\n                    querySnapshot => {\n                        if (!querySnapshot.empty) {\n                            querySnapshot.docs.forEach(\n                                snapshot => {\n                                    let registro = snapshot.data()\n                                    registro.id = snapshot.id\n                                    registros.push(registro)\n                                }\n                            )\n                            cbSetRegistros(registros)\n                        }\n                    }\n                )\n            }\n        )\n    }\n}\n\nexport default DaoRegistro","import React from \"react\";\nimport Container from '@material-ui/core/Container';\nimport { withFirebase } from './../firebase'\nimport DaoLivro from './../Livro/DaoLivro'\nimport DaoRegistro from './DaoRegistro'\nimport { Table, TableRow, TableCell, TableHead, TableBody } from '@material-ui/core'\n\nclass CadastroBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.daoLivro = new DaoLivro(this.props.firebase)\n        this.dao = new DaoRegistro(this.props.firebase)\n    }\n\n    render() {\n        if (!this.state.registros)\n            return <h1>Carregando registros</h1>\n        else if (!this.state.registros.length) {\n            return <h1>Não há registros</h1>\n        } else {\n            return <Container>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Título</TableCell>\n                            <TableCell align=\"center\">Proprietário</TableCell>\n                            <TableCell align=\"center\">Evento</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.registros.map(\n                                (registro, index) => {\n                                    return <TableRow key={index} id={index} name={index} >\n                                        <TableCell align=\"center\"> {registro.book.title} </TableCell>\n                                        <TableCell align=\"center\"> {registro.book.owner.name} </TableCell>\n                                        <TableCell align=\"center\"> {registro.libraryEvent} </TableCell>\n                                    </TableRow>\n                                }\n                            )\n                        }\n                    </TableBody>\n                </Table>\n            </Container>\n        }\n    }\n\n    componentDidMount() {\n        this.daoLivro.getLivrosPorProfessor(this.props.authUser.id,\n            (\n                listaTurmas => {\n                    this.daoLivro.getLivros(listaTurmas,\n                        listaLivros => {\n                            this.dao.getRegistros(listaLivros,\n                                registros => this.setState({ registros: registros })\n                            )\n                        }\n                    )\n                }\n            )\n        )\n    }\n\n}\n\nconst Cadastro = withFirebase(CadastroBase);\n\nexport default Cadastro;","class DaoUser {\n\n    constructor (firebase) {\n        this.firebase = firebase\n    }\n\n    updateUser(user, cbOk, cbFail) {\n        this.firebase.firestore.collection(\"user\").doc(user.id).set(user)\n        .then(cbOk)\n        .catch( error => cbFail(error) )\n    }\n\n    findUser(id, cbOk, cbFail) {\n        this.firebase.firestore.collection(\"user\").doc(id).get()\n        .then(\n            dataSnapshot => cbOk(dataSnapshot.data())\n        )\n        .catch( error => cbFail(error) )\n    }\n}\n\nexport default DaoUser","import React from 'react'\nimport { withFirebase } from '../firebase'\nimport * as ROUTES from './../../constants/routes'\nimport { Redirect } from 'react-router-dom'\nimport TurmaPersistence from './TurmaPersistence'\nimport DaoUser from './../User/DaoUser'\nimport { Table, TableHead, TableRow, TableCell, TableBody, Container } from '@material-ui/core'\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass AlunosListagemComponentBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.daoTurma = new TurmaPersistence(this.props.firebase)\n        this.daoUser = new DaoUser(this.props.firebase)\n        this.confirmUpdate = this.confirmUpdate.bind(this)\n    }\n\n    render() {\n        if (this.props.location.search) {\n            if (this.props.location.search.substr(0, 7) === \"?turma=\") {\n                if (!this.state.users) {\n                    return <h1>Carregando dados dos alunos</h1>\n                } else if (!this.state.users.length) {\n                    return <h1>Turma não contém membros</h1>\n                } else {\n                    return (\n                        <Container fixed>\n                            <h1>{this.state.turma.name}</h1>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell align=\"center\">Nome</TableCell>\n                                        <TableCell align=\"center\">Email</TableCell>\n                                        <TableCell align=\"center\">Estado</TableCell>\n                                        <TableCell align=\"center\">Ação</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n                                        this.state.users.map((aluno, index) => {\n                                            return <TableRow key={index}\n                                                id={index}\n                                                name={index} >\n                                                <TableCell align=\"center\">{aluno.name}</TableCell>\n                                                <TableCell align=\"center\">{aluno.email}</TableCell>\n                                                <TableCell align=\"center\"> <ActiveIcon member={aluno}/> </TableCell>\n                                                <TableCell align=\"center\"> \n                                                    <Acao member={aluno} daoUser={this.daoUser} confirm={this.confirmUpdate}/> \n                                                </TableCell>\n                                            </TableRow>\n                                        })\n                                    }\n                                </TableBody>\n                            </Table>\n                        </Container>\n                    )\n                }\n            }\n        }\n        return <Redirect to={ROUTES.TURMAS_DO_PROFESSOR} />\n    }\n\n    componentDidMount() {\n        let users = []\n        const turmaId = this.props.location.search.substr(7)\n        this.daoTurma.getAlunoPorTurma( turmaId,\n            turma => {\n                this.setState( {turma: (turma)} )\n                turma.members.forEach(\n                    member => this.daoUser.findUser(\n                        member.id, \n                        user => {\n                            users.push(user)\n                            this.setState( {users:(users)} )\n                        },\n                        error => console.log(error)\n                    )\n                )\n            }, \n            error => console.log(error)\n        )\n    }\n\n    confirmUpdate() {\n        this.setState({ultimaAtualizacao: Date.now()})\n    }\n}\n\nfunction ActiveIcon(props) {\n    if (props.member.inactive) {\n        return <CloseIcon/>\n    } \n    return <DoneIcon/>\n}\n\nfunction Acao(props) {\n\n    function handleChangeStatus() {\n        let member = props.member\n        member.inactive=!member.inactive\n        props.daoUser.updateUser(member,\n            props.confirm,\n            error => console.log(error.message))\n    }\n\n    if (props.member.inactive) {\n        return <span onClick={handleChangeStatus}>Ativar</span>\n    } \n    return <span onClick={handleChangeStatus}>Desativar</span>\n}\n\nconst AlunosListagemComponent = withFirebase(AlunosListagemComponentBase)\n\nexport default AlunosListagemComponent","import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport './../App.css'\n\nclass FrmDownloadApk extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <Container fixed>\n                <center>\n                    <div>\n                        <h1>Download apk Leiturama</h1>\n                        <a target=\"_blank\" href=\"https://drive.google.com/file/d/1upBYCfHVX6ubOxxO6lHNVfF3Kj9pC8Fz/view?usp=sharing\">\n                            <GetAppIcon/>\n                        </a>\n                    </div>\n                </center>\n            </Container>\n        )\n    }\n}\n\nexport default FrmDownloadApk","import React from 'react'\nimport './App.css'\nimport Header from './components/Header'\nimport Escola from './components/Escola'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { withFirebase } from './components/firebase'\nimport * as ROUTES from './constants/routes'\nimport Turmas, { ListagemTurmaProfessor } from './components/Turma'\nimport Professor from './components/Professor'\nimport Container from '@material-ui/core/Container'\nimport LoginComponent, { EsqueciSenhaComponent } from './components/Login'\nimport ComponentePrimeiroAcesso from './components/Professor/ComponentPrimeiroAcesso'\nimport ComponentListagemLivros from './components/Livro/ComponentListagemLivros'\nimport ComponentListagemRegistros from './components/Registro/ComponentListagemRegistros'\nimport AlunosListagemComponent from './components/Turma/ListagemAlunos'\nimport FrmDownloadApk from './components/FrmDownloadApk'\n\nclass AppBase extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      authUser: null,\n    }\n    this.setAuthUser = this.setAuthUser.bind(this);\n  }\n\n  render() {\n\n    // Se usuário não estiver autenticado\n    if (!this.state.authUser) {\n      return <Container maxWidth=\"lg\" className=\"app\">\n        <Router basename={ROUTES.BASE}>\n          <Header authUser={this.state.authUser} />\n          <Switch>\n            <Route path={ROUTES.ESQUECI_SENHA} component={EsqueciSenhaComponent} />\n            <Route path={ROUTES.PROFESSOR_PRIMEIRO_ACESSO} component={ComponentePrimeiroAcesso} />\n            <Route path={ROUTES.DOWNLOAD} component={FrmDownloadApk} />\n\n            <Route path={ROUTES.HOME} component={LoginComponent} />\n          </Switch>\n        </Router>\n      </Container>\n    }\n\n    // Se usuário autenticado for administrador\n    if (this.state.authUser.profiles.administrator) {\n      return (\n        <Container maxWidth=\"lg\" className=\"app\">\n        <Router basename={ROUTES.BASE}>\n            <Header authUser={this.state.authUser} />\n            <Switch>\n              <Route path={ROUTES.HOME} exact component={Home} />\n              <Route path={ROUTES.ESCOLA} component={Escola} />\n              <Route path={ROUTES.PROFESSOR} component={Professor} />\n              <Route path={ROUTES.TURMA} component={Turmas} />\n            </Switch>\n          </Router>\n        </Container>\n      );\n    }\n\n    // Se usuário autenticado for professor\n    if (this.state.authUser.profiles.professor) {\n      return (\n        <Container maxWidth=\"lg\" className=\"app\">\n        <Router basename={ROUTES.BASE}>\n            <Header authUser={this.state.authUser} />\n            <Switch>\n              <Route path={ROUTES.HOME} exact component={Home} />\n              <Route path={ROUTES.TURMAS_DO_PROFESSOR}>\n                <ListagemTurmaProfessor authUser={this.state.authUser} />\n              </Route>\n              <Route path={ROUTES.LIVROS_POR_PROFESSOR} exact >\n                <ComponentListagemLivros authUser={this.state.authUser} />\n              </Route>\n              <Route path={ROUTES.REGISTROS}>\n                <ComponentListagemRegistros authUser={this.state.authUser} />\n              </Route>\n              <Route path={ROUTES.ALUNOS_POR_TURMA} component={AlunosListagemComponent} />\n            </Switch>\n          </Router>\n        </Container>\n      )\n    }\n\n    // Se usuário autenticado for estudante\n    if (this.state.authUser.profiles.student) {\n      return <div>Aluno não possui funcionalidades na plataforma Web</div>\n    }\n  }\n\n\n  componentDidMount = () => {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(\n      authUser => {\n        if (authUser) {\n          var docReference = this.props.firebase.firestore.collection(\"user\").doc(authUser.uid);\n          docReference.get().then(\n            doc => {\n              if (doc.exists) {\n                let userData = doc.data();\n                this.setState({ authUser: userData })\n              } else {\n                console.log(\"Usuário não autorizado pelo sistema\");\n              }\n            }\n          ).catch(\n            function (error) {\n              console.log(\"Error getting document:\", error);\n            }\n          );\n        } else {\n          this.setState({ authUser: null });\n        }\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  setAuthUser(user) {\n    this.setState({ authUser: user })\n  }\n\n}\n\nfunction Home() {\n  return (<h1> Home </h1>);\n}\n\nconst App = withFirebase(AppBase);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/firebase';\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.b518f3af.png\";"],"sourceRoot":""}