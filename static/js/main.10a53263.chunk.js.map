{"version":3,"sources":["components/firebase/Firebase.js","components/firebase/FirebaseContext.js","components/firebase/index.js","constants/routes.js","components/Header.js","components/Escola.js","components/Turma/Turma.js","components/Professor/DaoProfessor.js","components/Turma/TurmaPersistence.js","components/Turma/Cadastro.js","components/Turma/Listagem.js","components/Turma/ListagemTurmaProfessor.js","components/Turma/index.js","components/Professor/Listagem.js","components/User/DaoUser.js","components/Professor/Cadastro.js","components/Professor/index.js","components/Login/LoginComponent.js","components/Login/EsqueciSenhaComponent.js","components/Login/index.js","components/Professor/ComponentPrimeiroAcesso.js","components/Livro/DaoLivro.js","components/Livro/ComponentListagemLivros.js","components/Registro/DaoRegistro.js","components/Registro/ComponentListagemRegistros.js","components/Turma/ListagemAlunos.js","components/FrmDownloadApk.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doSignOut","auth","signOut","doPasswordReset","email","sendPasswordResetEmail","doPasswordUpdate","password","currentUser","updatePassword","app","initializeApp","this","firestore","authUser","okCallback","errorCallback","createUserWithEmailAndPassword","then","userCredential","catch","error","callback","signInWithEmailAndPassword","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","HOME","ESCOLA","PROFESSOR","LIVROS_POR_PROFESSOR","REGISTROS","TURMA","TURMAS_DO_PROFESSOR","DOWNLOAD","AdministratorHeader","to","ROUTES","alt","src","require","height","className","href","onClick","event","ProfessorHeader","AnonimousHeader","state","usuarioLogado","profiles","administrator","professor","nomeEscola","cnpj","endereco","componentDidMount","bind","onChange","salvar","cancelar","console","log","Container","fixed","TextField","fullWidth","id","name","label","placeholder","margin","variant","value","multiline","rows","Button","color","collection","doc","get","exists","school","data","setState","initialState","target","set","Turma","adm","phone","members","DaoProfessor","getAll","findTeacherByEmail","lista","where","querySnapshot","forEach","prof","push","add","idUser","user","cbOk","cbFail","empty","size","teacher","delete","docs","TurmaPersistence","atualizar","turma","callbackOk","t","profId","turmaId","Cadastro","persistence","definirLista","confirmarCadastroDados","confirmarAtualizacaoDados","onAdministratorChange","required","FormControl","InputLabel","Select","labelId","listaProfessores","map","indice","MenuItem","key","cancelarCadastro","componentValue","find","element","n_borrowed","n_lent","n_read","TableOfClasses","Table","TableHead","TableRow","TableCell","align","TableBody","listaTurmas","index","onDoubleClick","LoadingClasses","TurmaListagemComponent","turmaPersistence","cadastrar","solicitarCadastro","onChangeDadosTurma","definirListaTurmas","solicitarAtualizacao","turmas","length","componentId","currentTarget","CarregarTurmaButton","selecionarTurma","copyToClipboard","visualizarAlunos","base_link","encodeURIComponent","replace","window","location","origin","toString","getTurmasPorProfessor","e","substr","document","getElementById","select","execCommand","Listagem","dao","onRequestTeacherUpdate","cadastrarProfessor","atualizarProfessor","aria-label","i","DaoUser","dataSnapshot","mudarPagina","daoUser","p","message","findUserByEmail","inserir","Professores","definirListaProfessores","search","LoginComponentBase","autenticar","usuario","htmlFor","OutlinedInput","type","senha","labelWidth","doSignIn","handleAuthenticationError","LoginComponent","EsqueciSenhaComponent","msg","resetar","encerrar","onSubmit","code","ComponentePrimeiroAcesso","daoProfessor","initialUser","onPasswdChange","carregarDadosProfessor","registerUser","Snackbar","anchorOrigin","vertical","horizontal","open","errorMessage","autoHideDuration","onClose","uidUser","uid","idTeacher","teacherId","autorizarUsuario","apagarTeacher","doSignUp","carregarDadosIniciaisProfessor","oldProf","DaoLivro","getLivros","getLivrosPorProfessor","book","cbSetTurmas","cbSetEmprestimos","membros","memberTurma","membro","emprestimos","snapshot","ActiveStatusChanger","changeStatus","inactive","daoLivro","updateBook","confirmUpdate","BarraDeNavegacao","BottomNavigation","estadoLivros","showLabels","BottomNavigationAction","icon","StatusLabel","defaultCssStyle","borderColor","padding","borderRadius","borderStyle","style","fontWeight","status","ComponentListagemLivros","livrosSemFiltro","livros","onChangeBookFilter","onChangeTermoPesquisado","confirmarAtualizacao","loadBooksLists","termoPesquisado","title","owner","livrosFiltrados","filter","livro","startsWith","allBooks","availableBooks","rentBooks","lastUpdate","Date","now","listaLivros","DaoRegistro","cbSetRegistros","registros","orderBy","registro","EventTypeButton","cssStyle","backgroundColor","eventType","eventDate","seconds","toLocaleTimeString","toLocaleDateString","libraryEvent","listaIds","flatMap","l","reg","includes","ActiveIcon","member","Acao","handleChangeStatus","updateUser","confirm","AlunosListagemComponent","daoTurma","users","aluno","getAlunoPorTurma","findUser","ultimaAtualizacao","FrmDownloadApk","Home","App","listener","onAuthStateChanged","userData","setAuthUser","maxWidth","path","exact","component","Escola","Professor","Turmas","ListagemTurmaProfessor","ComponentListagemRegistros","student","Boolean","hostname","match","ReactDOM","render","Provider","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.10a53263.chunk.js","sourcesContent":["import app from 'firebase/app';\nimport { auth } from \"firebase/auth\";\nimport { firestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyABV35W-LGbtEVMZNVKFtHO9fczQp_b-yY\",\n    authDomain: \"leiturama-40e49.firebaseapp.com\",\n    databaseURL: \"https://leiturama-40e49.firebaseio.com\",\n    projectId: \"leiturama-40e49\",\n    storageBucket: \"leiturama-40e49.appspot.com\",\n    messagingSenderId: \"697487135295\",\n    appId: \"1:697487135295:web:5c4d501e75585b13f35e8a\"\n};\n\nclass Firebase {\n\n    constructor() {\n        app.initializeApp(firebaseConfig);\n        this.auth = app.auth();\n        this.firestore = app.firestore();\n        this.authUser = null;\n    }\n\n    doSignUp(email, password, okCallback, errorCallback) {\n        this.auth.createUserWithEmailAndPassword(email, password)\n            .then( userCredential => okCallback(userCredential) )\n            .catch( error => errorCallback(error) );\n    }\n\n    doSignIn(email, password, callback) {\n        this.auth.signInWithEmailAndPassword(email, password).catch(callback);\n    }\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n}\n\nexport default Firebase;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import Firebase from './Firebase';\nimport FirebaseContext, {withFirebase} from './FirebaseContext';\n\nexport default Firebase;\nexport {FirebaseContext, withFirebase};","export const BASE = '/leiturama_escola_web/'\nexport const HOME = '/'\nexport const ESCOLA = \"/escola\"\nexport const PROFESSOR = \"/professor\"\nexport const PROFESSOR_PRIMEIRO_ACESSO = \"/professor/primeiroacesso\"\nexport const LIVROS_POR_PROFESSOR = \"/livros/professor\"\nexport const REGISTROS = \"/registros\"\nexport const TURMA = \"/turma\"\nexport const ALUNOS_POR_TURMA = \"/turma/alunos\"\nexport const TURMAS_DO_PROFESSOR = \"/turma/professor\"\nexport const ESQUECI_SENHA = \"/esqueci_senha\"\nexport const DOWNLOAD = \"/download\"","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from './firebase';\nimport * as ROUTES from './../constants/routes';\n\nclass Header extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            usuarioLogado: null\n        }\n    }\n\n    render() {\n        if (!this.props.authUser) { \n            return <AnonimousHeader/>\n        } else if (this.props.authUser.profiles.administrator) {\n            return <AdministratorHeader firebase={this.props.firebase} />\n        } else if (this.props.authUser.profiles.professor) {\n            return <ProfessorHeader firebase={this.props.firebase} />\n        }\n    }\n}\n\nfunction AdministratorHeader(props) {\n    return (\n        <header>\n            <div>\n                <Link to={ROUTES.HOME}> <img alt=\"imagem da logo\" src={require('./../logo.png')} height=\"120px\" /> </Link>\n            </div>\n            <ul className=\"navLinks\">\n                <li><Link to={ROUTES.ESCOLA}> Escola </Link></li>\n                <li><Link to={ROUTES.PROFESSOR}> Professores </Link></li>\n                <li><Link to={ROUTES.TURMA}> Turmas </Link></li>\n            </ul>\n            <div>\n                <a href=\"#\">\n                    <div className=\"btnLogout\" onClick={event => props.firebase.doSignOut()}>Sair</div>\n                </a>\n            </div>\n        </header>\n    )\n}\n\nfunction ProfessorHeader(props) {\n    return (\n        <header>\n            <div>\n                <Link to={ROUTES.HOME}> <img alt=\"imagem da logo\" src={require('./../logo.png')} height=\"120px\" /> </Link>\n            </div>\n            <ul className=\"navLinks\">\n                <li><Link to={ROUTES.TURMAS_DO_PROFESSOR}> Turmas </Link></li>\n                <li><Link to={ROUTES.LIVROS_POR_PROFESSOR}> Livros </Link></li>\n                <li><Link to={ROUTES.REGISTROS}> Registros </Link></li>\n            </ul>\n            <div>\n                <a href=\"#\">\n                    <div className=\"btnLogout\" onClick={event => props.firebase.doSignOut()}>Sair</div>\n                </a>\n            </div>\n        </header>\n    )\n}\n\nfunction AnonimousHeader(props) {\n    return (\n        <header>\n            <Link to={ROUTES.HOME}> <img alt=\"imagem da logo\" src={require('./../logo.png')} height=\"120px\" /> </Link>\n            <ul className=\"navLinks\">\n                <li><Link to={ROUTES.DOWNLOAD}> Download APK </Link></li>\n            </ul>\n        </header>\n    )\n}\nexport default withFirebase(Header);","import React from 'react'\n\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { withFirebase } from './firebase'\nclass Escola extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nomeEscola: \"\",\n            cnpj: \"\",\n            endereco: \"\"\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.salvar = this.salvar.bind(this);\n        this.cancelar = this.cancelar.bind(this);\n    }\n\n    render() {\n        console.log(\"Escola - rendered\")\n        return (\n            <Container fixed>\n                <h1>Escola</h1>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"iptNomeEscola\"\n                        name=\"nomeEscola\"\n                        label=\"Escola\"\n                        placeholder=\"Nome da escola\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.nomeEscola}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"iptCnpjEscola\"\n                        name=\"cnpj\"\n                        label=\"CNPJ\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.cnpj}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"iptEndereco\"\n                        name=\"endereco\"\n                        label=\"Endereço\"\n                        multiline\n                        rows=\"6\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.endereco}\n                    />\n                </div>\n                <div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.salvar} >Salvar</Button>\n                    &nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.cancelar}>Cancelar</Button>\n                </div>\n            </Container>\n\n        )\n    }\n\n    componentDidMount() {\n        console.log(\"Escola - componentDidMount\");\n        let schoolReference = this.props.firebase.firestore.collection(\"school\").doc(\"ftHhzHgJB1XTR9dDgbE8\");\n        schoolReference.get().then(doc => {\n            if (doc.exists) {\n                let school = doc.data();\n                this.setState({ ...school });\n                this.initialState = {...school};\n            }\n        }).catch(function (error) {\n            console.log(\"Escola - Erro na busca dos dados da escola\", error);\n        });\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    salvar(event) {\n        this.props.firebase.firestore.collection(\"school\").doc(\"ftHhzHgJB1XTR9dDgbE8\").\n            set({ ...this.state }).\n            then(function () {\n                console.log(\"Dados da escola salvos com sucesso\");\n            })\n    }\n\n    cancelar(event){\n        this.setState({...this.initialState});\n    }\n}\n\nexport default withFirebase(Escola);\n","class Turma {\n\n    constructor() {\n        this.adm = {\n            email: \"\",\n            id: \"\",\n            name: \"\", \n            phone: \"\"\n        }\n        this.name = \"\"\n        this.members = []\n    }\n}\n\nexport default Turma;","import Firebase from \"./../firebase/Firebase\"\n\nclass DaoProfessor {\n\n    constructor(firebase) {\n        this.firebase = firebase;\n        this.getAll = this.getAll.bind(this);\n        this.findTeacherByEmail = this.findTeacherByEmail.bind(this)\n    }\n\n    getAll(callback) {\n        let lista = [];\n        this.firebase.firestore.collection(\"user\").where(\"profiles.professor\", \"==\", true).get().then(\n\n            querySnapshot => {\n                querySnapshot.forEach(\n                    doc => {\n                        let prof = doc.data();\n                        prof.id = doc.id;\n                        lista.push(prof);\n                    }\n                );\n                callback(lista);\n            }\n        )\n    }\n\n    atualizar(id, professor, callback, error) {\n        this.firebase.firestore.collection(\"user\").doc(id)\n            .set(professor)\n            .then(callback())\n            .catch(error(error))\n    }\n\n    inserir(professor, callback, error) {\n        this.firebase.firestore.collection(\"teachers\").add(professor)\n            .then(callback())\n            .catch(error(error))\n    }\n\n    autorizarUsuario(idUser, user) {\n        this.firebase.firestore.collection(\"user\").doc(idUser).set(user)\n            .then(console.log(\"user adicionado com sucesso\"))\n            .catch( error => console.log(error) )\n    }\n\n    findTeacherByEmail(email, cbOk, cbFail) {\n        this.firebase.firestore.collection(\"teachers\").where(\"email\", \"==\", email).get()\n        .then(\n            querySnapshot => {\n                if (querySnapshot.empty) {\n                    cbOk(null)\n                } else if (querySnapshot.size > 1) {\n                    console.log(\"Existe mais de um usuário com o email cadastrado\")\n                    cbOk(null)\n                } else {\n                    querySnapshot.forEach(\n                        doc => {\n                            let teacher = doc.data();\n                            teacher.id = doc.id;\n                            cbOk(teacher)\n                        }\n                    );\n                }\n            }\n        )\n        .catch( error => cbFail(error) )\n    }\n\n    apagarTeacher(id) {\n        this.firebase.firestore.collection(\"teachers\").doc(id).delete().then(\n            ()=>{console.log(\"teacher deletado com sucesso\")}\n        )\n        .catch(\n            error=>{console.log(error)}\n        )\n    }\n\n    carregarDadosIniciaisProfessor(email, callback) {\n        this.firebase.firestore.collection(\"teachers\").where(\"email\", \"==\", email).get().then(\n            querySnapshot => {\n                if (querySnapshot.empty) {\n                    callback(null)\n                } else {\n                    let prof = querySnapshot.docs[0].data()\n                    prof.id = querySnapshot.docs[0].id\n                    callback(prof)\n                }\n            }\n        )\n    }\n}\n\nexport default DaoProfessor;","class TurmaPersistence {\n\n    constructor(firebase) {\n        this.firebase = firebase;\n        this.salvar = this.salvar.bind(this);\n        this.atualizar = this.atualizar.bind(this);\n    }\n\n    salvar(turma, callbackOk) {\n        let t = {}\n        t.name = turma.name\n        t.members = []\n        t.adm = turma.adm\n        this.firebase.firestore.collection(\"library\").add(t)\n            .then(callbackOk)\n            .catch(\n                function (error) {\n                    console.log(\"Error saving document:\", error);\n                }\n            );\n    }\n\n    atualizar(turma, callbackOk) {\n        this.firebase.firestore\n            .collection(\"library\")\n            .doc(turma.id)\n            .set(turma)\n            .then(() => {\n                callbackOk();\n            })\n            .catch(function (error) {\n                console.log(\"Error updating document:\", error);\n            });\n    }\n\n    getAll(callbackOk) {\n        let lista = [];\n        this.firebase.firestore.collection(\"library\").get().then(\n            querySnapshot => {\n                querySnapshot.forEach(\n                    doc => {\n                        let turma = doc.data();\n                        lista.push(turma);\n                    }\n                );\n                callbackOk(lista);\n            }\n        );\n    }\n\n    getTurmasPorProfessor(profId, callbackOk) {\n        let lista = [];\n        this.firebase.firestore.collection(\"library\").where(\"adm.id\", \"==\", profId).get().then(\n            querySnapshot => {\n                querySnapshot.forEach(\n                    doc => {\n                        let turma = doc.data();\n                        turma.id = doc.id;\n                        lista.push(turma);\n                    }\n                );\n                callbackOk(lista);\n            }\n        );\n    }\n\n    getAlunoPorTurma(turmaId, callbackOk) {\n        \n        this.firebase.firestore.collection(\"library\").doc(turmaId).get().then(\n            turma => {\n                callbackOk(turma.data())\n            }\n        )\n    }\n}\n\nexport default TurmaPersistence;","import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport DaoProfessor from '../Professor/DaoProfessor'\nimport { withFirebase } from '../firebase'\nimport TurmaPersistence from './TurmaPersistence'\n\nclass CadastroBase extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.persistence = new TurmaPersistence(this.props.firebase)\n\n        this.state = { turma: props.turma }\n        this.definirLista = this.definirLista.bind(this)\n        this.confirmarCadastroDados = this.confirmarCadastroDados.bind(this)\n        this.confirmarAtualizacaoDados = this.confirmarAtualizacaoDados.bind(this)\n        this.salvar = this.salvar.bind(this)\n        this.onAdministratorChange = this.onAdministratorChange.bind(this)\n    }\n\n    render() {\n        console.log(this.props.turma)\n        return <Container fixed>\n            <div>\n                <TextField fullWidth required id=\"name\" label=\"Nome\" margin=\"normal\"\n                    variant=\"outlined\" onChange={this.props.onChange} value={this.props.turma.name} />\n            </div>\n\n            <div>\n                <FormControl fullWidth>\n                    <InputLabel id=\"lblAdministrator\">  Administrador *</InputLabel>\n                    <Select fullWidth id=\"administrator\" label=\"Administrador\" variant=\"outlined\"\n                        labelId=\"lblAdministrator\" value={this.props.turma.adm.id} onChange={this.onAdministratorChange}>\n                        {\n                            this.state.listaProfessores ?\n                                this.state.listaProfessores.map(\n                                    (prof, indice) => {\n                                        return <MenuItem value={prof.id} key={prof.id}>\n                                            {prof.name}\n                                        </MenuItem>\n                                    }\n                                ) : null\n                        }\n                    </Select>\n                </FormControl>\n            </div>\n\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.salvar} >Salvar</Button> &nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.props.cancelarCadastro}>Cancelar</Button>\n            </div>\n        </Container>\n    }\n\n    componentDidMount() {\n        let daoProf = new DaoProfessor(this.props.firebase)\n        daoProf.getAll(this.definirLista)\n    }\n\n    definirLista(lista) {\n        this.setState({ listaProfessores: lista })\n    }\n\n    confirmarCadastroDados() {\n        console.log(\"Turma salva com sucesso\")\n        this.props.cancelarCadastro()\n    }\n\n    confirmarAtualizacaoDados() {\n        console.log(\"Turma atualizada com sucesso\")\n        this.props.cancelarCadastro()\n    }\n\n    onAdministratorChange(event) {\n        let componentValue = event.target.value;\n        let adm = this.state.listaProfessores.find(\n            element => element.id === componentValue\n        )\n        delete(adm.n_borrowed)\n        delete(adm.n_lent)\n        delete(adm.n_read)\n        delete(adm.profiles)\n        let turma = this.state.turma\n        turma.adm = adm\n        this.setState({turma: turma})\n    }\n\n    salvar(event) {\n        if (this.state.turma.id) {\n            this.persistence.atualizar(this.state.turma, this.confirmarCadastroDados)\n        } else {\n            this.persistence.salvar(this.state.turma, this.confirmarCadastroDados)\n        }\n        this.props.cancelarCadastro()\n    }\n}\n\nconst Cadastro = withFirebase(CadastroBase)\n\nexport default Cadastro","import React from 'react';\nimport Turma from './Turma';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Cadastro from './Cadastro';\nimport { withFirebase } from '../firebase';\nimport TurmaPersistence from './TurmaPersistence';\n\nclass TurmaListagemComponentBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.turmaPersistence = new TurmaPersistence(props.firebase);\n        this.state = { cadastrar: false };\n        this.solicitarCadastro = this.solicitarCadastro.bind(this);\n        this.cancelarCadastro = this.cancelarCadastro.bind(this);\n        this.onChangeDadosTurma = this.onChangeDadosTurma.bind(this);\n        this.definirListaTurmas = this.definirListaTurmas.bind(this);\n        this.solicitarAtualizacao = this.solicitarAtualizacao.bind(this);\n    }\n\n    render() {\n        if (this.state.cadastrar) {\n            return <Cadastro turma={this.state.turma}\n                firebase={this.props.firebase}\n                cancelarCadastro={this.cancelarCadastro}\n                salvar={this.salvar}\n                onChange={this.onChangeDadosTurma} />\n        }\n        \n        if (this.state.turmas) {\n            return <div>\n                <AddCircleIcon onClick={this.solicitarCadastro} />\n                {this.state.turmas.length > 0 ?\n                    <TableOfClasses listaTurmas={this.state.turmas}\n                        onDoubleClick={this.solicitarAtualizacao}/>:\n                    <h2>Não há turmas cadastradas</h2>}\n            </div>\n        } else {\n            return <div>\n                <AddCircleIcon onClick={this.solicitarCadastro}/>\n                <LoadingClasses />\n            </div>\n        }\n    }\n\n    onChangeDadosTurma(event) {\n        let componentId = event.target.id;\n        let componentValue = event.target.value;\n\n        let turma = this.state.turma;\n        turma[componentId] = componentValue;\n        this.setState({ turma: (turma) });\n    }\n\n    solicitarCadastro() {\n        let turma = new Turma();\n        this.setState({ cadastrar: true, turma: (turma) });\n    }\n\n    solicitarAtualizacao(event) {\n        let index = event.currentTarget.id;\n        let turma = this.state.turmas[index];\n        console.log(turma);\n        this.setState({ cadastrar: true, turma: (turma) });\n    }\n\n    cancelarCadastro() {\n        this.setState({ cadastrar: false });\n    }\n\n    definirListaTurmas(listaTurmas) {\n        this.setState({ turmas: listaTurmas });\n    }\n\n    componentDidMount() {\n        this.turmaPersistence.getAll(this.definirListaTurmas);\n    }\n}\n\nfunction TableOfClasses(props) {\n    return <div>\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell align=\"center\">Nome</TableCell>\n                    <TableCell align=\"center\">Administrador</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    props.listaTurmas.map((turma, index) => {\n                        return <TableRow key={index} \n                        id={index}\n                        name={index} \n                        onDoubleClick={props.onDoubleClick}>\n                            <TableCell align=\"center\">{turma.name}</TableCell>\n                            <TableCell align=\"center\">{turma.adm.name}</TableCell>\n\n                        </TableRow>\n                    })\n                }\n            </TableBody>\n        </Table>\n    </div>\n}\n\nfunction LoadingClasses(props) {\n    return <h2>\n        Carregando turmas\n    </h2>\n}\n\nconst TurmaListagemComponent = withFirebase(TurmaListagemComponentBase);\nexport default TurmaListagemComponent;","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport Table from '@material-ui/core/Table'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport { withFirebase } from '../firebase'\nimport TurmaPersistence from './TurmaPersistence'\nimport PeopleIcon from '@material-ui/icons/People'\nimport * as ROUTES from './../../constants/routes'\nimport { Redirect } from 'react-router-dom'\n\nconst base_link = \"https://leiturama.page.link/?\";\nconst link = \"https://leituramaescola.com/\";\nconst apn = \"com.arthur.leituramaescola\";\nconst afl = \"/download\";\n\nclass TurmaListagemComponentBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.turmaPersistence = new TurmaPersistence(props.firebase)\n        this.definirListaTurmas = this.definirListaTurmas.bind(this)\n        this.selecionarTurma = this.selecionarTurma.bind(this)\n        this.copyToClipboard = this.copyToClipboard.bind(this)\n    }\n\n    render() {\n        if (this.state.visualizarAlunos && this.state.turma) {\n            return <Redirect to={ROUTES.ALUNOS_POR_TURMA + \"?turma=\" + this.state.turma.id} />\n        } else if (!this.state.turmas) {\n            return <div> <LoadingClasses /> </div>\n        } else if (!this.state.turmas.length) {\n            return <div> <h2>Não há turmas cadastradas</h2> </div>\n        } else {\n            return <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Administrador</TableCell>\n                        <TableCell align=\"center\">Nome</TableCell>\n                        <TableCell align=\"center\">Convite</TableCell>\n                        <TableCell align=\"center\">Alunos</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        this.state.turmas.map(\n                            (turma, index) => {\n                                return (\n                                    <TableRow key={turma.id} id={turma.id}>\n                                        <TableCell align=\"center\"> {turma.name} </TableCell>\n                                        <TableCell align=\"center\"> {turma.adm.name} </TableCell>\n                                        <TableCell align=\"center\">\n                                            <input id={\"link\" + turma.id}\n                                                value={base_link + \"link=\" + encodeURIComponent(link + turma.id).replace('%20', '+')\n                                                    + \"&apn=\" + encodeURIComponent(apn).replace('%20', '+')\n                                                    + \"&afl=\" + encodeURIComponent(window.location.origin.toString() + ROUTES.BASE + \"#\" + ROUTES.DOWNLOAD).replace('%20', '+')} />\n                                            <button id={\"btn\" + turma.id} onClick={this.copyToClipboard}> Convidar </button>\n\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            <CarregarTurmaButton index={index} onClick={this.selecionarTurma} />\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            }\n                        )\n                    }\n                </TableBody>\n            </Table>\n        }\n    }\n\n    selecionarTurma(event) {\n        let index = event.currentTarget.id\n        let turma = this.state.turmas[index]\n        this.setState({ visualizarAlunos: true, turma: (turma) })\n    }\n\n    definirListaTurmas(listaTurmas) {\n        this.setState({ turmas: listaTurmas })\n    }\n\n    componentDidMount() {\n        let id = this.props.authUser.id\n        this.turmaPersistence.getTurmasPorProfessor(id, this.definirListaTurmas)\n    }\n\n    copyToClipboard(e) {\n        let id = e.target.id.substr(3)\n        let edtLink = document.getElementById(\"link\" + id)\n        edtLink.select()\n        document.execCommand(\"copy\")\n        console.log(\"somente um teste\")\n    }\n}\n\nfunction LoadingClasses(props) {\n    return <h2>\n        Carregando turmas\n    </h2>\n}\n\nfunction CarregarTurmaButton(props) {\n    return (\n        <Button id={props.index} onClick={props.onClick}>\n            <PeopleIcon />\n        </Button>\n    )\n}\n\nconst TurmaListagemComponent = withFirebase(TurmaListagemComponentBase)\n\nexport default TurmaListagemComponent","\nimport TurmaListagemComponent from './Listagem'\nimport ListagemTurmaProfessor from './ListagemTurmaProfessor'\n\nexport default TurmaListagemComponent\n\nexport {ListagemTurmaProfessor}","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport * as ROUTES from './../../constants/routes';\nimport { withFirebase } from './../firebase';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DaoProfessor from './DaoProfessor';\n\nclass ListagemBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.dao = new DaoProfessor(props.firebase);\n        this.onClick = this.onClick.bind(this);\n        this.onDoubleClick = this.onDoubleClick.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.onRequestTeacherUpdate = this.onRequestTeacherUpdate.bind(this);\n        this.state = {\n            cadastrarProfessor: false,\n            atualizarProfessor: false\n        };\n    }\n\n    render() {\n        if (this.state.cadastrar) {\n            return <Redirect to={ROUTES.PROFESSOR + \"?cadastrar=true\"} />\n        } else if (this.state.atualizar) {\n            return <Redirect to={ROUTES.PROFESSOR + \"?indice=\" + this.state.indice} />\n        }\n        return (\n            <div>\n                <div onClick={this.onClick}>\n                    <AddCircleIcon />\n                </div>\n\n                <Table aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Nome</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Telefone</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n\n                        {\n                            this.state.lista ?\n                                this.state.lista.map(\n                                    ((prof, i) => {\n                                        return (\n                                            <TableRow id={i} onDoubleClick={this.onDoubleClick}\n                                                key={i}>\n                                                <TableCell align=\"center\"> {prof.name} </TableCell>\n                                                <TableCell align=\"center\"> {prof.email} </TableCell>\n                                                <TableCell align=\"center\"> {prof.phone} </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                ) : null\n                        }\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n\n    onClick(event) {\n        this.setState({ cadastrar: true, atualizar: false })\n    }\n\n    onDoubleClick(event) {\n        let id = event.currentTarget.id;\n        this.setState({ cadastrar: false, atualizar: true, indice: id });\n    }\n\n    componentDidMount() {\n        this.dao.getAll(\n            lista => {\n                this.props.definirLista(lista);\n                this.setState({ 'lista': lista });\n            }\n        )\n    }\n\n    onRequestTeacherUpdate(event) {\n        this.setState(\n            {\n                indice: event.target.id,\n                cadastrar: false,\n                atualizar: true\n            }\n        );\n    }\n}\n\nconst Listagem = withFirebase(ListagemBase);\n\nexport default Listagem;","class DaoUser {\n\n    constructor (firebase) {\n        this.firebase = firebase\n    }\n\n    updateUser(user, cbOk, cbFail) {\n        this.firebase.firestore.collection(\"user\").doc(user.id).set(user)\n        .then(cbOk)\n        .catch( error => cbFail(error) )\n    }\n\n    findUser(id, cbOk, cbFail) {\n        this.firebase.firestore.collection(\"user\").doc(id).get()\n        .then(\n            dataSnapshot => cbOk(dataSnapshot.data())\n        )\n        .catch( error => cbFail(error) )\n    }\n\n    findUserByEmail(email, cbOk, cbFail) {\n        this.firebase.firestore.collection(\"user\").where(\"email\", \"==\", email).get()\n        .then(\n            querySnapshot => {\n                if (querySnapshot.empty) {\n                    cbOk(null)\n                } else if (querySnapshot.size > 1) {\n                    console.log(\"Existe mais de um usuário com o email cadastrado\")\n                    cbOk(null)\n                } else {\n                    querySnapshot.forEach(\n                        doc => {\n                            let user = doc.data();\n                            user.id = doc.id;\n                            cbOk(user)\n                        }\n                    );\n                }\n            }\n        )\n        .catch( error => cbFail(error) )\n    }\n}\n\nexport default DaoUser","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as ROUTES from \"./../../constants/routes\";\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { withFirebase } from \"./../firebase\";\nimport DaoProfessor from \"./DaoProfessor\";\nimport DaoUser from './../User/DaoUser'\n\nclass CadastroBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.initialState = {\n            mudarPagina: false,\n            professor: {\n                name: \"\",\n                email: \"\",\n                phone: \"\"\n            }\n        };\n        this.state = { ...this.initialState };\n        this.onChange = this.onChange.bind(this);\n        this.salvar = this.salvar.bind(this);\n        this.cancelar = this.cancelar.bind(this);\n        this.dao = new DaoProfessor(this.props.firebase);\n        this.daoUser = new DaoUser(this.props.firebase)\n    }\n\n    render() {\n        if (this.state.mudarPagina) {\n            return <Redirect to={ROUTES.PROFESSOR} />\n        }\n        return (\n            <Container fixed>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"name\"\n                        name=\"name\"\n                        label=\"Nome\"\n                        placeholder=\"Nome do professor\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.professor.name}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"E-mail\"\n                        placeholder=\"E-mail do professor\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.professor.email}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        fullWidth\n                        id=\"phone\"\n                        name=\"phone\"\n                        label=\"Telefone\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onChange}\n                        value={this.state.professor.phone}\n                    />\n                </div>\n                <div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.salvar} >Salvar</Button>&nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.cancelar}>Cancelar</Button>\n                </div>\n            </Container>\n        )\n    }\n\n    componentDidMount() {\n        if (this.props.lista) {\n            const prof = this.props.lista[this.props.indice];\n            this.setState({ professor: prof });\n        }\n    }\n\n    onChange(event) {\n        let p = this.state.professor;\n        p[event.target.name] = event.target.value;\n        this.setState({ professor: p });\n    }\n\n    cancelar(event) {\n        this.setState({ mudarPagina: true });\n    }\n\n    salvar(event) {\n        let prof = { ...this.state.professor };\n        let id = prof.id;\n        delete prof.id;\n        delete prof.mudarPagina;\n        if (id) {\n            this.dao.atualizar(id, prof,\n                () => {\n                    this.setState({ mudarPagina: true });\n                },\n                error => console.log(error.message)\n            )\n        } else {\n            this.daoUser.findUserByEmail(\n                prof.email,\n                user => {\n                    if (user) {\n                        console.log(\"Email já cadastrado\")\n                    } else {\n                        this.dao.findTeacherByEmail(\n                            prof.email,\n                            teacher => {\n                                if (teacher) {\n                                    console.log(\"Email ja cadastrado\")\n                                } else {\n                                    this.dao.inserir(prof,\n                                        () => { this.setState({ mudarPagina: true }) },\n                                        error => console.log(error.message)\n                                    )\n                                }\n                            },\n                            error => console.log(error.message)\n                        )\n                    }\n                }, \n                error => {\n                    console.log(error.message)\n                }\n            )\n        }\n    }\n}\nconst Cadastro = withFirebase(CadastroBase);\n\nexport default Cadastro;","import React from 'react';\nimport Listagem from './Listagem';\nimport Cadastro from './Cadastro';\nimport {withFirebase} from './../firebase';\n \nclass ProfessoresBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.definirListaProfessores = this.definirListaProfessores.bind(this);\n    }\n    \n    render() {\n        console.log(\"Professores - render\");\n        if (this.props.location.search) {\n            if (this.props.location.search.substr(0,8) === \"?indice=\") {\n                const indice = this.props.location.search.substr(8)\n                return <Cadastro lista={this.state.lista} indice={indice}/>\n            }\n            return <Cadastro/>\n        } else {\n            return <Listagem definirLista={this.definirListaProfessores} />\n        }\n    }\n\n    definirListaProfessores(listaProfessores) {\n        this.setState( {lista: listaProfessores} );\n    }\n}\n\nconst Professores = withFirebase(ProfessoresBase);\n\nexport default Professores;","import React from 'react';\nimport './LoginComponent.css';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { withFirebase } from './../firebase';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport * as ROUTES from \"./../../constants/routes\";\nimport { Link } from 'react-router-dom';\n\nclass LoginComponentBase extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n        this.onChange = this.onChange.bind(this);\n        this.cancelar = this.cancelar.bind(this);\n        this.autenticar = this.autenticar.bind(this);\n    }\n\n    render() {\n        return <Container fixed>\n            <div>\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"E-mail\"\n                    placeholder=\"email\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.usuario}\n                    onChange={this.onChange}\n                />\n            </div>\n            <div>\n                <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                    <OutlinedInput\n                        id=\"senha\"\n                        type='password'\n                        value={this.state.senha}\n                        onChange={this.onChange}\n                        labelWidth={70}\n                    />\n                </FormControl>\n                <Link to={ROUTES.ESQUECI_SENHA}>Esqueci a senha</Link> <br/>\n                <Link to={ROUTES.PROFESSOR_PRIMEIRO_ACESSO}>É seu primeiro acesso professor?</Link>\n            </div>\n            <div className=\"confirmationControl\">\n                <Button variant=\"contained\" color=\"primary\" onClick={this.autenticar}>Autenticar</Button>\n                &nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.cancelar}>Limpar</Button>\n            </div>\n        </Container>\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    cancelar() {\n        this.setState({ ...initialState });\n    }\n\n    autenticar() {\n        this.props.firebase.doSignIn(this.state.email, this.state.senha, this.handleAuthenticationError);\n    }\n\n    handleAuthenticationError(error){\n        console.log(\"===================================\");\n        console.log(error);\n        console.log(error.message);\n        console.log(\"===================================\");\n    }\n}\n\nconst initialState = { email: \"\", senha: \"\" };\n\nconst LoginComponent = withFirebase(LoginComponentBase);\n\nexport default LoginComponent;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { withFirebase } from './../firebase';\nimport { Redirect } from 'react-router-dom';\nimport * as ROUTES from \"./../../constants/routes\";\n\nclass EsqueciSenhaComponentBase extends React.Component {\n\n    constructor(props) {\n        console.log(\"FrmEsqueciSenha - constructor\");\n        super(props);\n        this.state = { email: \"\", msg: \"\" };\n        this.onChange = this.onChange.bind(this);\n        this.resetar = this.resetar.bind(this);\n        this.cancelar = this.cancelar.bind(this);\n    }\n\n    render() {\n        if (this.state.encerrar) {\n            return <Redirect to={ROUTES.HOME} />\n        }\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <TextField\n                        fullWidth\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"E-mail\"\n                        placeholder=\"E-mail\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.email}\n                        onChange={this.onChange} />\n\n                    <div className=\"confirmationControl\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetar}>Resetar</Button>\n                        &nbsp;\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.cancelar}>Cancelar</Button>\n                    </div>\n                </form>\n                {this.state.msg ? this.state.msg : \"\"}\n            </div>\n        )\n    }\n\n    onChange(event) {\n        this.setState({ email: event.target.value });\n    }\n\n    resetar(event) {\n        this.props.firebase.doPasswordReset(this.state.email).\n            then(\n                () => {\n                    this.setState({ email: \"\", msg: \"Um email foi enviado para \" + this.state.email + \" com instruções para recuperar sua senha\" });\n                    this.setState({ encerrar: true });\n                }\n            ).catch(\n                error => {\n                    console.log(\"falha\");\n                    if (error.code === \"auth/user-not-found\") {\n                        this.setState({ msg: \"Email não encontrado\" })\n                    } else if (error.code === \"auth/invalid-email\") {\n                        this.setState({ msg: \"Email inválido\" })\n                    } else {\n                        this.setState({ msg: \"Falha na operação\" })\n                    }\n                }\n            );\n    }\n\n    cancelar() {\n        this.setState({ encerrar: true });\n    }\n\n    componentDidMount() {\n\n    }\n}\n\nconst EsqueciSenhaComponent = withFirebase(EsqueciSenhaComponentBase);\n\nexport default EsqueciSenhaComponent;","import LoginComponent from './LoginComponent';\nimport EsqueciSenhaComponent from './EsqueciSenhaComponent';\n\nexport default LoginComponent;\n\nexport {EsqueciSenhaComponent};","import React from 'react';\nimport { withFirebase } from '../firebase';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport DaoProfessor from './DaoProfessor';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nclass ComponentePrimeiroAcessoBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.daoProfessor = new DaoProfessor(this.props.firebase);\n        this.state = {\n            user: { ...initialUser }\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onPasswdChange = this.onPasswdChange.bind(this)\n        this.carregarDadosProfessor = this.carregarDadosProfessor.bind(this)\n        this.onClick = this.onClick.bind(this)\n        this.registerUser = this.registerUser.bind(this)\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <Container fixed>\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"E-mail\"\n                    placeholder=\"email\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.user.email}\n                    onChange={this.onChange}\n                />\n                <br />\n\n                {\n                    !this.state.user.name ? null : <div>\n                        <TextField\n                            fullWidth\n                            id=\"name\"\n                            name=\"name\"\n                            label=\"Nome\"\n                            placeholder=\"Nome\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            value={this.state.user.name}\n                            onChange={this.onChange}\n                        />\n                        <br />\n                        <TextField\n                            fullWidth\n                            id=\"phone\"\n                            name=\"phone\"\n                            label=\"Telefone\"\n                            placeholder=\"Telefone\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            value={this.state.user.phone}\n                            onChange={this.onChange}\n                        />\n                        <br />\n                        <FormControl variant=\"outlined\" fullWidth>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"senha\"\n                                type='password'\n                                value={this.state.password}\n                                onChange={this.onPasswdChange}\n                                labelWidth={70}\n                            />\n                        </FormControl>\n                    </div>\n                }\n                <div className=\"confirmationControl\">\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.onClick}> Iniciar </Button>\n                    &nbsp;\n                    <Button variant=\"contained\" color=\"secondary\" onClick={event => this.setState({ user: { ...initialUser } })}>Limpar</Button>\n                </div>\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'left', }}\n                    open={this.state.errorMessage}\n                    autoHideDuration={1000}\n                    onClose={ () => this.setState({errorMessage: null}) }\n                    message={this.state.errorMessage}\n                />\n            </Container>\n        )\n    }\n\n    showMessage(value) {\n\n    }\n\n    onPasswdChange(event) {\n        let value = event.target.value\n        this.setState({ senha: value })\n    }\n\n    onChange(event) {\n        let value = event.target.value\n        let id = event.target.id\n        let user = this.state.user\n        user[id] = value;\n        this.setState({ user: user });\n    }\n\n    registerUser(userCredential) {\n        let uidUser = userCredential.user.uid\n        let idTeacher = this.state.teacherId\n        let user = this.state.user\n        user.id = uidUser\n\n        this.daoProfessor.autorizarUsuario(uidUser, user)\n\n        this.daoProfessor.apagarTeacher(idTeacher)\n    }\n\n    onClick(event) {\n        if (this.state.user.name) {\n            // Registra usuário no Firebase Authentication\n            let email = this.state.user.email\n            let senha = this.state.senha\n            this.props.firebase.doSignUp(email, senha, this.registerUser, error => console.log(error))\n        } else {\n            // Usuário digitou email e carrega os dados do pre cadastro que já foi realizado\n            this.daoProfessor.carregarDadosIniciaisProfessor(this.state.user.email,\n                prof => {\n                    if (prof) {\n                        let id = prof.id;\n                        delete (prof.id)\n                        let oldProf = this.state.user\n                        this.setState({ teacherId: id, user: { ...oldProf, ...prof } })\n                    } else {\n                        this.setState( {errorMessage: \"Usuário inexistente\"} )\n                    }\n                }\n            )\n        }\n    }\n\n    carregarDadosProfessor(email) {\n\n    }\n}\n\nconst ComponentePrimeiroAcesso = withFirebase(ComponentePrimeiroAcessoBase);\n\nconst initialUser = {\n    name: \"\",\n    n_borrowed: 0,\n    n_lent: 0,\n    n_read: 0,\n    email: \"\",\n    phone: \"\",\n    profiles: {\n        professor: true\n    }\n}\n\nexport default ComponentePrimeiroAcesso;","import TurmaPersistence from \"../Turma/TurmaPersistence\";\n\nclass DaoLivro {\n\n    constructor(firebase) {\n        this.firebase = firebase\n        this.getLivros = this.getLivros.bind(this)\n        this.getLivrosPorProfessor = this.getLivrosPorProfessor.bind(this)\n    }\n\n    updateBook(book, cbOk, cbFail) {\n        this.firebase.firestore.collection(\"books\").doc(book.id).set(book).then(\n            cbOk,\n            error => cbFail(error)\n        )\n    }\n\n    getLivrosPorProfessor(profId, cbSetTurmas) {\n        let turmaPersistence = new TurmaPersistence(this.firebase)\n        turmaPersistence.getTurmasPorProfessor(profId, cbSetTurmas)\n    }\n\n    getLivros(listaTurmas, cbSetEmprestimos) {\n        let membros = []\n        listaTurmas.forEach(\n            turma => {\n                if (turma.members) {\n                    turma.members.forEach(\n                        memberTurma => {\n                            let jaAdicionado = membros.find(\n                                membro => membro.id === memberTurma.id\n                            )\n                            if (!jaAdicionado) {\n                                membros.push(memberTurma)\n                            }\n                        }\n                    )\n                }\n            }\n        )\n\n        let emprestimos = []\n        membros.forEach(\n            membro => {\n                this.firebase.firestore.collection(\"books\").where(\"owner.id\", \"==\", membro.id).get().then(\n                    querySnapshot => {\n                        if (!querySnapshot.empty) {\n                            querySnapshot.docs.forEach(\n                                snapshot => {\n                                    let book = snapshot.data()\n                                    book.id = snapshot.id\n                                    emprestimos.push(book)\n                                }\n                            )\n                            cbSetEmprestimos(emprestimos)\n                        }\n                    }\n                )\n            }\n        )\n    }\n}\n\nexport default DaoLivro","import React from 'react'\nimport { withFirebase } from './../firebase'\nimport DaoLivro from './DaoLivro'\nimport { Container, Table, TableRow, TableCell, TableHead, TableBody, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AvailableIcon from '@material-ui/icons/Check'\nimport TextField from '@material-ui/core/TextField'\nimport { Button } from '@material-ui/core'\n\nclass ComponentListagemLivrosBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { estadoLivros: \"ALL\", livrosSemFiltro: [], livros: [] }\n        this.dao = new DaoLivro(this.props.firebase)\n        this.onChangeBookFilter = this.onChangeBookFilter.bind(this)\n        this.onChangeTermoPesquisado = this.onChangeTermoPesquisado.bind(this)\n        this.confirmarAtualizacao = this.confirmarAtualizacao.bind(this)\n        this.loadBooksLists = this.loadBooksLists.bind(this)\n    }\n\n    render() {\n        if (!this.state.livrosSemFiltro) {\n            return <h1>Carregando livros</h1>\n        } else {\n            return <Container fixed>\n                <BarraDeNavegacao estadoLivros={this.state.estadoLivros} onChange={this.onChangeBookFilter} />\n                <TextField fullWidth id=\"edtTitle\" label=\"Pesquisar\" placeholder=\"Digite o título desejado\"\n                    margin=\"normal\" variant=\"outlined\" onChange={this.onChangeTermoPesquisado} value={this.state.termoPesquisado} />\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Mudar status</TableCell>\n                            <TableCell align=\"center\">Título</TableCell>\n                            <TableCell align=\"center\">Proprietário</TableCell>\n                            <TableCell align=\"center\">Status</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.livros.map(\n                                (book, index) => {\n                                    return <TableRow key={index} id={index} name={index} >\n                                        <TableCell align=\"center\"> <ActiveStatusChanger book={book} daoLivro={this.dao} confirmUpdate={this.confirmarAtualizacao} /> </TableCell>\n                                        <TableCell align=\"center\"> {book.title} </TableCell>\n                                        <TableCell align=\"center\"> {book.owner.name}</TableCell>\n                                        <TableCell align=\"center\">\n                                            <StatusLabel book={book} />\n                                        </TableCell>\n                                    </TableRow>\n                                }\n                            )\n                        }\n                    </TableBody>\n                </Table>\n            </Container>\n        }\n    }\n    onChangeTermoPesquisado(event) {\n        let termoPesquisado = event.target.value\n\n        if (termoPesquisado.length < 3) {\n            let livrosSemFiltro = this.state.livrosSemFiltro\n            this.setState({ livros: livrosSemFiltro })\n        } else {\n            let livrosSemFiltro = this.state.livrosSemFiltro\n            let livrosFiltrados = livrosSemFiltro.filter(\n                livro => livro.title.startsWith(termoPesquisado)\n            )\n            this.setState({ livros: livrosFiltrados })\n        }\n    }\n\n    onChangeBookFilter(event, value) {\n        if (value === \"ALL\") {\n            this.setState({ estadoLivros: value, livros: this.state.allBooks, livrosSemFiltro: this.state.allBooks })\n        } else if (value === \"AVAILABLE\") {\n            this.setState({ estadoLivros: value, livros: this.state.availableBooks, livrosSemFiltro: this.state.availableBooks })\n        } else {\n            this.setState({ estadoLivros: value, livros: this.state.rentBooks, livrosSemFiltro: this.state.rentBooks })\n        }\n    }\n\n    confirmarAtualizacao() {\n        this.loadBooksLists()\n        this.setState({ lastUpdate: Date.now() })\n    }\n\n    componentDidMount() {\n        this.loadBooksLists()\n    }\n\n    loadBooksLists() {\n        this.dao.getLivrosPorProfessor(this.props.authUser.id,\n            (\n                listaTurmas => {\n                    this.dao.getLivros(listaTurmas,\n                        listaLivros => {\n                            let allBooks = listaLivros\n                            let availableBooks = []\n                            let rentBooks = []\n                            let livros = allBooks\n                            listaLivros.forEach(\n                                livro => {\n\n                                    if (livro.inactive) {\n                                        return\n                                    }\n\n                                    if (livro.status === 'LENT') {\n                                        rentBooks.push(livro)\n                                    } else {\n                                        availableBooks.push(livro)\n                                    }\n\n                                }\n                            )\n                            this.setState(\n                                {\n                                    allBooks: allBooks,\n                                    availableBooks: availableBooks,\n                                    rentBooks: rentBooks,\n                                    livros: livros,\n                                    livrosSemFiltro: livros\n                                }\n                            )\n                        }\n                    )\n                }\n            )\n        )\n    }\n}\n\n\nfunction ActiveStatusChanger(props) {\n\n    function changeStatus() {\n        book.inactive = !book.inactive\n        daoLivro.updateBook(book, props.confirmUpdate)\n    }\n\n    let book = props.book\n    let daoLivro = props.daoLivro\n\n    if (book.inactive) {\n        return <Button variant=\"contained\" color=\"primary\" onClick={changeStatus}>Ativar</Button>\n    }\n    return <Button variant=\"contained\" color=\"secondary\" onClick={changeStatus}>Desativar</Button>\n}\n\nfunction BarraDeNavegacao(props) {\n    return (\n        <BottomNavigation value={props.estadoLivros} showLabels onChange={props.onChange} >\n            <BottomNavigationAction value=\"ALL\" label=\"Todos\" icon={<LibraryBooksIcon />} />\n            <BottomNavigationAction value=\"AVAILABLE\" label=\"Disponíveis\" icon={<AvailableIcon />} />\n            <BottomNavigationAction value=\"LENT\" label=\"Emprestados\" icon={<CloseIcon />} />\n        </BottomNavigation>\n    )\n}\n\nfunction StatusLabel(props) {\n    const AVAILABLE = \"DISPONÍVEL\"\n    const LENT = \"EMPRESTADO\"\n    const BORROW_ASKED = \"EMPRÉSTIMO SOLICITADO\"\n    const DEVOLUTION_ASKED = \"DEVOLUÇÃO SOLICITADA\"\n\n    const AVAILABLE_LABEL = \"AVAILABLE\"\n    const LENT_LABEL = \"LENT\"\n    const BORROW_ASKED_LABEL = \"BORROW_ASKED\"\n    const DEVOLUTION_ASKED_LABEL = \"DEVOLUTION_ASKED\"\n\n    let defaultCssStyle = {\n        borderColor: \"black\",\n        padding: 10,\n        borderRadius: 10,\n        color: \"#000\",\n        borderStyle: \"solid\"\n    }\n\n    let InactiveCssStyle = {\n        borderColor: \"black\",\n        padding: 10,\n        borderRadius: 10,\n        color: \"red\",\n        fontWeight: \"bold\",\n        borderStyle: \"solid\"\n    }\n\n    if (props.book.inactive) {\n        return <span style={InactiveCssStyle}>DESATIVADO</span>\n    } else if (props.book.status === AVAILABLE_LABEL) {\n        return <span style={defaultCssStyle}>{AVAILABLE}</span>\n    } else if (props.book.status === LENT_LABEL) {\n        return <span style={defaultCssStyle}>{LENT}</span>\n    } else if (props.book.status === BORROW_ASKED_LABEL) {\n        return <span style={defaultCssStyle}>{BORROW_ASKED}</span>\n    } else {\n        return <span style={defaultCssStyle}>{DEVOLUTION_ASKED}</span>\n    }\n}\n\n\nlet ComponentListagemLivros = withFirebase(ComponentListagemLivrosBase)\n\nexport default ComponentListagemLivros","class DaoRegistro {\n\n    constructor(firebase) {\n        this.firebase = firebase\n    }\n\n    getAll(cbSetRegistros) {\n        let registros = []\n        this.firebase.firestore.collection(\"registers\").orderBy(\"eventDate\", \"desc\").get().then(\n                    querySnapshot => {\n                        if (!querySnapshot.empty) {\n                            querySnapshot.docs.forEach(\n                                snapshot => {\n                                    let registro = snapshot.data()\n                                    registro.id = snapshot.id\n                                    registros.push(registro)\n                                }\n                            )\n                            cbSetRegistros(registros)\n                        }\n                    }\n                )\n    }\n\n    getRegistros(livros, cbSetRegistros) {\n        let registros = []\n        livros.forEach(\n            livro => {\n                this.firebase.firestore.collection(\"registers\").where(\"book.id\", \"==\", livro.id).get().then(\n                    querySnapshot => {\n                        if (!querySnapshot.empty) {\n                            querySnapshot.docs.forEach(\n                                snapshot => {\n                                    let registro = snapshot.data()\n                                    registro.id = snapshot.id\n                                    registros.push(registro)\n                                }\n                            )\n                            cbSetRegistros(registros)\n                        }\n                    }\n                )\n            }\n        )\n    }\n}\n\nexport default DaoRegistro","import React from \"react\";\nimport Container from '@material-ui/core/Container';\nimport { withFirebase } from './../firebase'\nimport DaoLivro from './../Livro/DaoLivro'\nimport DaoRegistro from './DaoRegistro'\nimport { Table, TableRow, TableCell, TableHead, TableBody } from '@material-ui/core'\n\nclass CadastroBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.daoLivro = new DaoLivro(this.props.firebase)\n        this.dao = new DaoRegistro(this.props.firebase)\n    }\n\n    render() {\n        if (!this.state.registros)\n            return <h1>Carregando registros</h1>\n        else if (!this.state.registros.length) {\n            return <h1>Não há registros</h1>\n        } else {\n            return <Container>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Título</TableCell>\n                            <TableCell align=\"center\">Proprietário</TableCell>\n                            <TableCell align=\"center\">Data</TableCell>\n                            <TableCell align=\"center\">Evento</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.registros.map(\n                                (registro, index) => {\n                                    let eventDate = new Date(registro.eventDate.seconds *1000);\n                                    return <TableRow key={index} id={index} name={index} >\n                                        <TableCell align=\"center\"> {registro.book.title} </TableCell>\n                                        <TableCell align=\"center\"> {registro.book.owner.name} </TableCell>\n                                        <TableCell align=\"center\"> <p>{eventDate.toLocaleTimeString('pt-BR')}</p>\n                                                                   <p>{eventDate.toLocaleDateString('pt-BR')}</p>\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <EventTypeButton eventType={registro.libraryEvent} />\n                                        </TableCell>\n                                    </TableRow>\n                                }\n                            )\n                        }\n                    </TableBody>\n                </Table>\n            </Container>\n        }\n    }\n\n    componentDidMount() {\n        this.daoLivro.getLivrosPorProfessor(this.props.authUser.id,\n            (\n                listaTurmas => {\n                    this.daoLivro.getLivros(listaTurmas,\n                        listaLivros => {\n                            let listaIds = listaLivros.flatMap(l => l.id)\n                            this.dao.getAll(\n                                registros => this.setState({ registros: registros.filter(reg => listaIds.includes(reg.book.id)) })\n                            )\n                        }\n                    )\n                }\n            )\n        )\n    }\n}\n\nfunction EventTypeButton(props) {\n    const ADDED = \"ADICIONADO\"\n    const TAKEN = \"EMPRESTADO\"\n    const RETURNED = \"DEVOLVIDO\"\n\n    let cssStyle = {\n        backgroundColor: 'gray', \n        padding: 10,\n        borderRadius: 10, \n        color: \"#fff\"}\n\n    if (props.eventType === \"ADDED\") {\n        return <span style={cssStyle}>{ADDED}</span>\n    } else if (props.eventType === \"TAKEN\") {\n        return <span style={cssStyle}>{TAKEN}</span>\n    } else {\n        return <span style={cssStyle}>{RETURNED}</span>\n    }\n}\n\nconst Cadastro = withFirebase(CadastroBase);\n\nexport default Cadastro;","import React from 'react'\nimport { withFirebase } from '../firebase'\nimport * as ROUTES from './../../constants/routes'\nimport { Redirect } from 'react-router-dom'\nimport TurmaPersistence from './TurmaPersistence'\nimport DaoUser from './../User/DaoUser'\nimport { Table, TableHead, TableRow, TableCell, TableBody, Container, Button } from '@material-ui/core'\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass AlunosListagemComponentBase extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.daoTurma = new TurmaPersistence(this.props.firebase)\n        this.daoUser = new DaoUser(this.props.firebase)\n        this.confirmUpdate = this.confirmUpdate.bind(this)\n    }\n\n    render() {\n        if (this.props.location.search) {\n            if (this.props.location.search.substr(0, 7) === \"?turma=\") {\n                if (!this.state.users) {\n                    return <h1>Carregando dados dos alunos</h1>\n                } else if (!this.state.users.length) {\n                    return <h1>Turma não contém membros</h1>\n                } else {\n                    return (\n                        <Container fixed>\n                            <h1>{this.state.turma.name}</h1>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell align=\"center\">Nome</TableCell>\n                                        <TableCell align=\"center\">Email</TableCell>\n                                        <TableCell align=\"center\">Estado</TableCell>\n                                        <TableCell align=\"center\">Ação</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n                                        this.state.users.map((aluno, index) => {\n                                            return <TableRow key={index}\n                                                id={index}\n                                                name={index} >\n                                                <TableCell align=\"center\">{aluno.name}</TableCell>\n                                                <TableCell align=\"center\">{aluno.email}</TableCell>\n                                                <TableCell align=\"center\"> <ActiveIcon member={aluno}/> </TableCell>\n                                                <TableCell align=\"center\"> \n                                                    <Acao member={aluno} daoUser={this.daoUser} confirm={this.confirmUpdate}/> \n                                                </TableCell>\n                                            </TableRow>\n                                        })\n                                    }\n                                </TableBody>\n                            </Table>\n                        </Container>\n                    )\n                }\n            }\n        }\n        return <Redirect to={ROUTES.TURMAS_DO_PROFESSOR} />\n    }\n\n    componentDidMount() {\n        let users = []\n        const turmaId = this.props.location.search.substr(7)\n        this.daoTurma.getAlunoPorTurma( turmaId,\n            turma => {\n                this.setState( {turma: (turma)} )\n                turma.members.forEach(\n                    member => this.daoUser.findUser(\n                        member.id, \n                        user => {\n                            users.push(user)\n                            this.setState( {users:(users)} )\n                        },\n                        error => console.log(error)\n                    )\n                )\n            }, \n            error => console.log(error)\n        )\n    }\n\n    confirmUpdate() {\n        this.setState({ultimaAtualizacao: Date.now()})\n    }\n}\n\nfunction ActiveIcon(props) {\n    if (props.member.inactive) {\n        return <CloseIcon/>\n    } \n    return <DoneIcon/>\n}\n\nfunction Acao(props) {\n\n    function handleChangeStatus() {\n        let member = props.member\n        member.inactive=!member.inactive\n        props.daoUser.updateUser(member,\n            props.confirm,\n            error => console.log(error.message))\n    }\n\n    if (props.member.inactive) {\n        return <Button variant=\"contained\" color=\"primary\"  onClick={handleChangeStatus}>Ativar</Button>\n    } \n    return <Button  variant=\"contained\"color=\"secondary\" onClick={handleChangeStatus}>Desativar</Button>\n}\n\nconst AlunosListagemComponent = withFirebase(AlunosListagemComponentBase)\n\nexport default AlunosListagemComponent","import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport './../App.css'\n\nclass FrmDownloadApk extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <Container fixed>\n                <center>\n                    <div>\n                        <h1>Download apk Leiturama</h1>\n                        <a target=\"_blank\" href=\"https://drive.google.com/file/d/1upBYCfHVX6ubOxxO6lHNVfF3Kj9pC8Fz/view?usp=sharing\">\n                            <GetAppIcon/>\n                        </a>\n                    </div>\n                </center>\n            </Container>\n        )\n    }\n}\n\nexport default FrmDownloadApk","import React from 'react'\nimport './App.css'\nimport Header from './components/Header'\nimport Escola from './components/Escola'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { withFirebase } from './components/firebase'\nimport * as ROUTES from './constants/routes'\nimport Turmas, { ListagemTurmaProfessor } from './components/Turma'\nimport Professor from './components/Professor'\nimport Container from '@material-ui/core/Container'\nimport LoginComponent, { EsqueciSenhaComponent } from './components/Login'\nimport ComponentePrimeiroAcesso from './components/Professor/ComponentPrimeiroAcesso'\nimport ComponentListagemLivros from './components/Livro/ComponentListagemLivros'\nimport ComponentListagemRegistros from './components/Registro/ComponentListagemRegistros'\nimport AlunosListagemComponent from './components/Turma/ListagemAlunos'\nimport FrmDownloadApk from './components/FrmDownloadApk'\n\nclass AppBase extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      authUser: null,\n    }\n    this.setAuthUser = this.setAuthUser.bind(this);\n  }\n\n  render() {\n\n    // Se usuário não estiver autenticado\n    if (!this.state.authUser) {\n      return <Container maxWidth=\"lg\" className=\"app\">\n        <Router>\n          <Header authUser={this.state.authUser} />\n          <Switch>\n            <Route path={ROUTES.ESQUECI_SENHA} component={EsqueciSenhaComponent} />\n            <Route path={ROUTES.PROFESSOR_PRIMEIRO_ACESSO} component={ComponentePrimeiroAcesso} />\n            <Route path={ROUTES.DOWNLOAD} component={FrmDownloadApk} />\n\n            <Route path={ROUTES.HOME} component={LoginComponent} />\n          </Switch>\n        </Router>\n      </Container>\n    }\n\n    // Se usuário autenticado for administrador\n    if (this.state.authUser.profiles.administrator) {\n      return (\n        <Container maxWidth=\"lg\" className=\"app\">\n          <Router>\n            <Header authUser={this.state.authUser} />\n            <Switch>\n              <Route path={ROUTES.HOME} exact component={Home} />\n              <Route path={ROUTES.ESCOLA} component={Escola} />\n              <Route path={ROUTES.PROFESSOR} component={Professor} />\n              <Route path={ROUTES.TURMA} component={Turmas} />\n            </Switch>\n          </Router>\n        </Container>\n      );\n    }\n\n    // Se usuário autenticado for professor\n    if (this.state.authUser.profiles.professor) {\n      return (\n        <Container maxWidth=\"lg\" className=\"app\">\n          <Router>\n            <Header authUser={this.state.authUser} />\n            <Switch>\n              <Route path={ROUTES.HOME} exact component={Home} />\n              <Route path={ROUTES.TURMAS_DO_PROFESSOR}>\n                <ListagemTurmaProfessor authUser={this.state.authUser} />\n              </Route>\n              <Route path={ROUTES.LIVROS_POR_PROFESSOR} exact >\n                <ComponentListagemLivros authUser={this.state.authUser} />\n              </Route>\n              <Route path={ROUTES.REGISTROS}>\n                <ComponentListagemRegistros authUser={this.state.authUser} />\n              </Route>\n              <Route path={ROUTES.ALUNOS_POR_TURMA} component={AlunosListagemComponent} />\n            </Switch>\n          </Router>\n        </Container>\n      )\n    }\n\n    // Se usuário autenticado for estudante\n    if (this.state.authUser.profiles.student) {\n      return <div>Aluno não possui funcionalidades na plataforma Web</div>\n    }\n  }\n\n\n  componentDidMount = () => {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(\n      authUser => {\n        if (authUser) {\n          var docReference = this.props.firebase.firestore.collection(\"user\").doc(authUser.uid);\n          docReference.get().then(\n            doc => {\n              if (doc.exists) {\n                let userData = doc.data();\n                this.setState({ authUser: userData })\n              } else {\n                console.log(\"Usuário não autorizado pelo sistema\");\n              }\n            }\n          ).catch(\n            function (error) {\n              console.log(\"Error getting document:\", error);\n            }\n          );\n        } else {\n          this.setState({ authUser: null });\n        }\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  setAuthUser(user) {\n    this.setState({ authUser: user })\n  }\n\n}\n\nfunction Home() {\n  return (<h1> Home </h1>);\n}\n\nconst App = withFirebase(AppBase);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/firebase';\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.b518f3af.png\";"],"sourceRoot":""}